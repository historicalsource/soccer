	.TITLE SDRONE
	.RADIX 16
	.SBTTL *************************
	.SBTTL *
	.SBTTL * ROUTINE: HANDLE SOCCER DRONE
	.SBTTL * PROGRAMMER: DFT
	.SBTTL *
	.SBTTL *************************
	.REPT 0
DATE INITIATED: 27-MAR-79
PROJECT #: 20303
DISK #: 11 & B28
	.ENDR
	.PAGE
	.INCLUDE SOCOMN
	.PAGE
	.SBTTL SYMBOL DEFINITIONS
;
;GLOBAL ENTRY POINTS DEFINED HERE
;
	.GLOBL PDRONE,GOALC,NEWGOL,CALZON,QCHSM6
;
;EXTERNALLY DEFINED ENTRY POINTS
;
	.GLOBL VELOUP,POINTB,CLRINC,PLAGOL,TOGOLC,BGDELT
;
;GLOBAL VARIABLES DEFINED ELSEWHERE
;
	.GLOBL TVINC,THINC,VGOAL,HGOAL,HPOSL,VPOS,HPOSH,J,DRONPL
	.GLOBL DRIBBL,OBJECT,FLAGS,STATE,TEAM,VBALZO,CHKSM6
	.GLOBL TIMER2,BHPOSL,BVPOSL,ATRACT,HBALZO,AHEAD,OPARAM,DSPEED
;
;BASE PAGE VARIABLES USED LOCALLY (COMMON BASE PAGE AREA)
;
	.BSECT BCOM
K:	.BYTE 0
L:	.BYTE 0
DIVSOR:	.BYTE 0,0
QUOT:	.BYTE 0,0,0,0
	.BSECT BDRON
SAVSP1:	.BLKB 1			;SAVE LOCS FOR DRONE SPEEDS
SAVSP2:	.BLKB 1
	.PAGE
	.SBTTL PROCESS DRONE'S MOVEMENTS
	.CSECT
PDRONE:
	LDA DSPEED		;SAVE DRONE SPEEDS
	STA SAVSP1
	LDA DSPEED+2
	STA SAVSP2
	LDA STATE		;IT THIS IS GAME PLAY, THEN UPDATE
	CMP I,S.PLAY		;THE DRONE'S GOAL
	IFEQ
	  LDX OBJECT
	  LDY DRONPL		;IF A GOALIE HAS CAUGHT THE BALL
	  IFPL
	    LDA AY,TEAM
	    CMP AX,TEAM
	    IFEQ		;THEN MOVE OFFENSIVE PLAYER
	      LDY AX,TEAM
	      LDA AY,HOGOL	;TOWARDS HIS GOALIE
	    ELSE
	      LDA I,HCENTR	;MOVE DEFENSIVE TO CENTER
	    THEN
	    CMP ZX,HPOSH	;POINT HIM AT BALL IF AT GOAL.
	    IFEQ
	      JSR POINTB
	    ELSE
	      STA AX,HGOAL+1
	      LDA ZX,VPOS
	      STA AX,VGOAL
	    THEN
	  ELSE
	    JSR GOAFTB		;GOALIE DOESN'T HAVE BALL. DETERMINE GOAL.
	  THEN
	  LDA AX,FLAGS		;SET "NOT AT GOAL"
	  AND I,NATGOAL
	  STA AX,FLAGS
	THEN
	JSR GOALC
	LDA SAVSP1		;RESTORE DRONE SPEEDS
	STA DSPEED
	LDA SAVSP2
	STA DSPEED+2
	RTS
HOGOL:	.BYTE HCENTR-8,0,HCENTR+8
	.PAGE
	.SBTTL DETERMINE DRONE GOAL
;X=DRONE ID
GOAFTB:	LDA AX,FLAGS
	AND I,FOFFSI		;DRONE OFFSIDES?
	IFNE
	  LDA I,HCENTR		;YES. SEND HIM TO HORIZ CENTER OF FIELD
	  STA AX,HGOAL+1
	  LDA ZX,VPOS
	  STA AX,VGOAL		;MAINTAIN VERT POSITION
	  RTS			;EXIT
	THEN
	LDY DRIBBL
	IFPL
	  LDA AY,TEAM
	  EOR AX,TEAM
	THEN
	IFNE			;NO.TEAMMATE OR DRONE HAVE BALL?
	  LDA TIMER2		;NO.WAITING AROUND?
	  BEQ THEBAL		;NO.GO AFTER BALL.
				;YES. KEEP THE OBJECT IN PLACE
	  TXA
	  TAY
	  JMP PLAGOL
	THEN
				;YES, TEAMMATE OR DRONE HAS BALL SO FALL INTO NEXT PAGE
	.PAGE
	.SBTTL OFFENSIVE DRONE
				;SEND HIM TO OTHER SIDE OF GOAL FROM BALL
				;AND BACK ALITTLE TO AVOID OFFSIDES
	LDA AX,OPARAM		;REGULAR DRONE?
	AND I,DRONE
	IFNE
	  CPX DRIBBL
	  IFEQ			;DOES DRONE HAVE BALL?
	    LDY AX,TEAM		;SPEED UP DRONE WITH BALL
	    LDA I,10
	    STA AY,DSPEED
	    TYA
	    EOR I,02
	    TAY
	    JMP TOGOLC		;YES. SEND HIM TO NEAREST GOAL CORNER OF OPPONENT
	  THEN
	  LDA I,VCENTR+40.	;SAY BALL IS BELOW CENTER FOR STARTERS
	  LDY BVPOSL+1
	  CPY I,VCENTR
	  IFCS			;BALL ABOVE OR BELOW CENTER?
	    LDA I,VCENTR-40.	;ABOVE
	  THEN			;SET VERTICAL GOAL=GOALIE'S WEAK
	  			;SPOT ON OTHER HALF OF GOAL FROM BALL
	ELSE
	  LDY AX,DRZONN		;ATTRACT MODE DRONE. SEND HIM TO
	  LDA AY,ZONEC		;CENTER OF HIS ZONE.
	THEN
	STA AX,VGOAL		;SAVE VERT GOAL.
	LDA BHPOSL		;SET HORIZ GOAL=PARALLEL TO
	STA AX,HGOAL		;BALL, BUT BACK ABIT FROM GOAL
	LDY BHPOSL+1
	INY
	LDA HBALZO
	IFNE
	  DEY
	  DEY
	THEN
	TYA
	STA AX,HGOAL+1
	RTS
	.PAGE
	.SBTTL SEND DRONE AFTER THE BALL
THEBAL:	LDA BHPOSL
	STA AX,HGOAL		;SET DRONE'S HGOAL=BALL'S H POSITION
	LDA BHPOSL+1
	STA AX,HGOAL+1
	LDA ATRACT		;IF IN GAME MODE
	IFMI
	  LDA BVPOSL+1		;GO AFTER BALL
	ELSE
	LDA AX,DRZONB	
	AND VBALZO		;IS BALL IN DRONE'S ZONE?
	IFNE
	  LDA BVPOSL+1		;YES GO AFTER BALL
	ELSE
	  LDA AX,DRZONB
	  LDY AX,DRZONN		;NO, SEND DRONE TOWARDS
	  CMP VBALZO		;THE EDGE OF HIS ZONE CLOSEST TO
	  IFCC			;BALL
	    LDA AY,ZONET	;(TOP)
	  ELSE
	    LDA AY,ZONEB	;(BOTTOM)
	  THEN
	THEN
	THEN
	STA AX,VGOAL
	RTS
;
;
ZONEB:	.BYTE 0,60.,88.		;BOTTOM ZONE(1)
ZONEC	=ZONEB+1
	.BYTE 72.,118.,164.	;MIDDLE ZONE(2)
ZONET	=ZONEC+1
	.BYTE 148.,176.,245.	;TOP ZONE(4)
DRZONB:	.BYTE 0,0,1,0,4,6,2,3,0,0,1,0,4,6,2,3
DRZONN	=DRZONB+1
	.PAGE
	.SBTTL BALL ZONE CALC.
CALZON:
	LDX I,6
	LDA I,0
	STA VBALZO
	LDA BVPOSL+1
	BEGIN
	  CMP AX,ZONEB		;ABOVE BOTTOM OF ZONE?
	  IFCS
	   CMP AX,ZONET		;YES. BELOW TOP OF ZONE?
	   IFCC
	     INC VBALZO		;YES. SET BIT FOR THIS ZONE
	   THEN
	  THEN
	  ASL VBALZO
	  DEX
	  DEX
	  DEX
	MIEND
	LSR VBALZO
	LDY I,0			;NOW DO H ZONE
	LDX BHPOSL+1
	CPX I,HCENTR
	IFCS
	  LDY I,2
	THEN
	STY HBALZO
	JMP BGDELT		;CALCULATE BALL GOAL DELTA
	.PAGE
	.SBTTL DETERMINE OBJECT INCREMENT USING GOALS
;INPUT:	X = LOGICAL OBJECT #
;	HGOAL(X) AND VGOAL(X)=2 BYTE HORIZONTAL & VERTICAL COMPONENTS OF
;			      GOAL'S POSITION
;	HPOSL,H(X) AND VPOS(X)=HORIZ & VERTICAL COMPONENTS OF OBJECT'S POSITION
;OUTPUT:THINC & TVINC=2 BYTE HORIZ & VERTICAL COMPONENTS OF INCREMENT
;
NEWGOL:	LDA AX,FLAGS		;NEW GOAL BEING SETUP,
	AND I,NATGOAL		;SO SET "NOT AT GOAL".
	STA AX,FLAGS
GOALC:
	LDA AX,FLAGS
	IFPL			;IS OBJECT "AT GOAL"?
	  JSR DIRECT		;NO CALC OBJECT-GOAL DELTA
	  LDA THINC
	  ORA THINC+1
	  ORA TVINC
	  ORA TVINC+1
	  IFNE			;HAS OBJECT REACH GOAL
	    LDA STATE
	    CMP I,S.SET
	    IFEQ
	      LDA I,20
	    ELSE
	      LDA I,30		;(BALL SPEED)
	      CPX I,BALLNO*2	;SET SPEED LIMIT
	      IFNE		;BALL?
		LDY AX,TEAM
		LDA AY,DSPEED	;NO. GET DRONE-GOALIE SPEED
	      THEN
	    THEN
	    JSR SPDLIM		;ITS MOVEMENT
	  ELSE
	    LDA AX,FLAGS	;YES, SO SET "AT GOAL" FLAG
	    ORA I,ATGOAL	;FOR OBJECT
	    STA AX,FLAGS
	  THEN
	ELSE			;YES IT IS "AT GOAL", SO
	  JSR CLRINC
	THEN
	JMP VELOUP		;UPDATE OBJECT'S VELOCITY
	.PAGE
	.SBTTL CALCULATE GOAL-OBJECT DELTA
DIRECT:	LDA AX,VGOAL
	SEC
	SBC X,VPOS
				;---
	STA TVINC+1		;WE WANT SIGNED DIFFERNCE OF TWO COMPENSATE
				;FOR OVERLOW
				;UNSIGNED NUMBERS.
				;C=1,D7=1==>POSITIVE OVERFLOW
				;C=0,D7=0==>NEGATIVE OVERFLOW
	BCC 1$
	EOR I,80		;D7=D7?C
1$:	BMI 3$			;D7<>C==>VALUE OKAY
	LDA I,7F		;C=1==>SET TO 7F (POSITIVE OVERFLOW)
	BCS 2$
	LDA I,80		;C=0==>SET TO 80 (NEGATIVE OVERFLOW)
2$:	STA TVINC+1
3$:				;---
	LDA I,0
	STA TVINC		;KEEP LSB'S 0
	LDA AX,HGOAL
	SEC
	SBC X,HPOSL
	STA THINC
	LDA AX,HGOAL+1
	SBC X,HPOSH
	STA THINC+1
	RTS
QCHSM6:	.BYTE CHKSM6		;6TH CHECKSUM (3600)
	.PAGE
	.SBTTL SPEED-LIMIT
;SPDLIM - SPEED LIMIT
;
;ENTRY	(THINC,THINC+1) = HPOS DIFFERENCE (SIGNED)
;	(TVINC,TVINC+1) = VPOS DIFFERENCE (SIGNED)
;	(A) = INDEX FOR WHICH SPEED (MULTIPLES OF 10)
;EXIT	(THINC,THINC+1) = HPOS DIFFERENCE IN RANGE
;	(TVINC,TVINC+1) = VPOS DIFFERENCE IN RANGE
SPDLIM:	STX K			;SAVE PLAYER NUMBER
	STA L			;SAVE SPEED LIMIT TABLE INDEX
	LSR
	LSR
	LSR
	LSR
	STA DIVSOR		;SAVE INDEX INTO SPDLM2
	LDA THINC+1
	STA J
	AND I,0F0
	IFMI			;IF POSITIVE NUMBER
	  EOR I,0F0		;MAKE SURE SIGN EXTENSION IS CORRECT
	THEN
	BEQ 15$			;SIGN EXTENSION IS O.K.
	LDA I,7F		;MAX DIFF OF + 127 DOTS
	LDY J
	BPL 20$			;IF POSITIVE
	LDA I,81		;OR -127
	BMI 20$			;ALWAYS

15$:	LDA THINC
	ROL
	ROL J
	ROL
	ROL J
	ROL
	LDA J
	ROL
20$:	ABSACC			;J=HABS=ABS (THINC NORMALIZED TO 1 BYTE)
	STA J
	LDA TVINC+1
	ABSACC			;VABS=ABS (TVINC)
	LDX I,0		;X POINTS TO MAX
	LDY J
	CMP J
	BEQ 90$			;IF AT 45 DEGREE ANGLE
	IFCS			;PICK MAX (HABS,VABS)
	  LDX I,2		;HABS IS MAX
	  TAY
	  LDA J
	THEN
	ASL
	STA QUOT+1		;QUOTIENT=MIN*2
	STY DIVSOR+1		;DIVISOR=MAX
	LDY DIVSOR
	LDA AY,SPDLM2
	CMP DIVSOR+1
	BCS 80$			;VALUES ARE GOOD ALREADY
	LDY I,3			;3 DIGITS OF ACCURACY FOR MIN/MAX
	BEGIN
	  LDA QUOT+1
	  SEC
	  SBC DIVSOR+1
	  IFCS			;NO SUBTRACT
	    STA QUOT+1
	  THEN
	  ROL QUOT
	  ROL QUOT+1
	  DEY
	EQEND			;LOOP 3 TIMES
	LDA QUOT
	AND I,07
	ASL			;*2 FOR 2 WORD ENTRIES
	ORA L
	TAY
	LDA AY,SPDLM1		;GET MAX VALUES
	STA ZX,QUOT		;SAVE MAX SPEED LIMIT (ASSUMES DIVISOR FOLLOWS QUOT)
	TXA
	EOR I,02		;SWITCH TO MINIMUM
	TAX
	LDA AY,SPDLM1+1
	STA ZX,QUOT		;SAVE MIN
60$:	LDA I,0
	STA QUOT+1		;SET MSB OF VABS AND HABS
	ASL QUOT+2		;MAKE VABS INTO THE PROPER FORMAT
	ROL
	ASL QUOT+2
	ROL
	ASL QUOT+2
	ROL
	STA QUOT+3		;ASSUMED TO BE DIVSOR-A SCRATCH CELL
	LDX I,2
	BEGIN
	  LDA ZX,THINC+1
	  ASL
	  LDY ZX,QUOT
	  LDA ZX,QUOT+1
	  IFCS			;WAS POSITIVE
	    TYA
	    EOR I,0FF
	    ADC I,0		;COMPLEMENT VABS OR QUOT
	    TAY
	    LDA ZX,QUOT+1
	    EOR I,0FF
	    ADC I,0
	  THEN
	  STA ZX,THINC+1
	  STY ZX,THINC
	  DEX
	  DEX
	MIEND
80$:	LDX K			;RESTORE X=PLAYER NUMBER
	RTS

90$:	LDY DIVSOR		;COME HERE IF VERT=HORIZ (45 DEG)
	LDA AY,SPDLM2
	CMP J
	BCS 80$			;LESS THAN SPEED LIMIT RETURN
	LDA Y,SPDLM3
	STA QUOT
	STA QUOT+2
	BNE 60$			;ALWAYS

SPDLM1:					;EACH ENTRY REPRESENTS LLL.FFFFF LINES
	.BYTE 40,0,40,08,40,10,40,18	;LIMIT=0 FOR SLOW PLAYERS
	.BYTE 40,20,3C,24,38,28,34,2C
	.BYTE 60,0,60,0C,60,18,60,24	;LIMIT=10 FOR FAST PLAYERS
	.BYTE 60,30,52,36,50,3C,4E,42
	.BYTE 0A0,0,0A0,14,0A0,28,0A0,3C	;LIMIT=20 FOR BALL
	.BYTE 0A0,50,96,5C,8C,64,82,6E	
	.BYTE 0FF,0,0FF,20,0FF,40,0FF,60	;LIMIT=30 FOR POSITIONING PLAYERS
	.BYTE 0FF,80,0F0,90,0E0,0A0,0D0,0B0
SPDLM2:	.BYTE 1,2,5,8			;MIN DISTANCE BEFORE SPEED LIMIT IS USED
SPDLM3:	.BYTE 30,48,78,0C0		;45 DEGREE SPEED LLL.FFFFF
	.END

                                                                                                                                                                                                                                                                                                                                  