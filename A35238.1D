	.TITLE SCOLIS
	.RADIX 16
	.SBTTL**********************************
	.SBTTL*
	.SBTTL*  MODULE: SCOLIS
	.SBTTL*  PROGRAMMER: DFT
	.SBTTL*  FUNCTION: DETECT AND PROCESS 
	.SBTTL*		   OBJECT COLLISIONS
	.SBTTL*		   & PROCESS BALL
	.SBTTL*
	.SBTTL*********************************
	.REPT 0
DATE: 5-MAR-79
DISK #: 11 & B28
PROJECT #: 20303
	.ENDR
	.PAGE
	.INCLUDE SOCOMN
	.PAGE
	.SBTTL SYMBOL DEFINITIONS
GOALIE	=10
DRONE	=8
LTEAMN	=0		;# OF 1ST LEFT PLAYER
RTEAMN	=8		;# OF 1ST RIGHT PLAYER
FPSECO	=20.		;20 FRAMES/SEC
COLHIT	=10
KIKSND	=1C		;KICK SOUND (THUD)
;
;ZERO PAGE VARIABLES (INTERNAL USE ONLY)
;
	.BSECT BPCO
PLAINX:	.BLKB 1
OBJINX:	.BLKB 1
BALTIM:	.BLKB 1		;FRAMES SINCE BALL LAST TOUCHED
BALPLA:	.BLKB 1
UPVEL:	.BLKB 1		;BALL'S UPWARD VELOCITY
HEIGHL:	.BLKB 1			;BALL'S HEIGHT
FACTOR:	.BLKB 1
MAXISQ:	.BLKB 1
DOUBLE:	.BLKB 1
TEMP:	.BLKB 1
TEMPB:	.BLKB 1
TEMPC:	.BLKB 1
PLSTUC:	.BLKB 1			;PLAYER BEFORE LAST WHO TOUCHED BALL
LSTUCH:	.BLKB 1			;PLAYER WHO LAST TOUCHED BALL
PLAYER:	.BLKB 1			;TEMP SLOT FOR PLAYER #
BPCOLID:.BLKB 1			;BALL PLAYER COLLISION
VDISP:	.BLKB 1			;VERTICAL DISPLACEMENT BETWEEN 2 OBJECTS
HDISP:	.BLKB 2			;HORIZONTAL DISPLACEMENT BETWEEN 2 OBJECTS
AVVD:	.BLKB 1			;ABS. VALUE OF VERT. DISP.
AVHDL:	.BLKB 1			;ABS VALUE OF HORZ. DISP.
AVHDH:	.BLKB 1
AVHD:	.BLKB 1
STEAL:	.BLKB 1				;BALL STEALS IN LAST X FRAMES COUNTER
TIMSTL:	.BLKB 1				;TIMER FOR CLEARING STEAL
;
;GLOBAL ENTRY POINTS DEFINED HERE
;
	.GLOBL PCOLIS,PBALL,INIBAL,QCHKS3,QCHKS4,RESULT,TOGOLC,PLAGOL
;
;GLOBAL VARIABLES DEFINED ELSEWHERE
;
	.GLOBL HVVEL,HHVEL,DRIBBL,TENYDS,DSTAWA,DRONPL,TEMOFF,BALPEN
	.GLOBL VPOS,HPOSL,HPOSH,OBJECT,THINC,TVINC,BHPOSL,BVPOSL,CHKSM3,CHKSM4
	.GLOBL KSWIT,OBDIRC,HGOAL,VGOAL,OPARAM,PLAOPT,LSTSET,RULES
	.GLOBL STATE,FLAGS,J,K,ORDER,THUD,TIMER1,TEAM,KIKBUT
	.GLOBL ABGHDL,ABGVD,PICBL1,FRAME,LPICT1,LPICT2,HBALZO,BGVD,BVVEL,BHVEL
;
;GLOBAL ENTRY POINTS DEFINED ELSEWHERE
;
	.GLOBL UPLSCOR,UPRSCOR,CLRKIK,GOALC
	.GLOBL MOFFSI,PENOFF,NEWCHR
	.GLOBL MOVER,CALZON,NEWGOL,ONETWO,TWOONE
	.PAGE
	.PAGE
	.CSECT
	.SBTTL MAIN COLLISION LOOP
;
;CHECK FOR COLLISIONS AND PROCESS ANY FOUND
;
PCOLIS:	LDA STATE
	CMP I,S.PAUS
	IFNE			;NO COLLISONS IN PAUSE

	LDA I,0			;CLEAR ORDER ARRAY
	LDX I,LOBLOOP
	BEGIN
	  STA AX,ORDER
	  DEX
	  DEX
	MIEND
	LDA FRAME		;EVERYOTHER FRAME CHOSE OTHER
	AND I,1			;PLAYER ID SEQUENCE FOR
	CLC			;COLLISION PROCESSING
	ADC I,LOBLOOP
	STA OBJINX
	BEGIN
	  LDX OBJINX
	  LDA AX,ROBJID
	  STA OBJECT		;MAJOR PLAYER ID
	  DEX
	  DEX
	  STX PLAINX		;MINOR PLAYER ID INDEX
	  IFPL
	  BEGIN			;TEST MAJOR PLAYER AGAINST ALL OBJECTS BELOW
	    LDX PLAINX		;HIM IN TABLE
	    LDA AX,ROBJID
	    STA PLAYER
	    JSR COLLIS		;PROCESS COLLISION
	    DEC PLAINX
	    DEC PLAINX
	  MIEND
	  THEN
	  DEC OBJINX		;DROP TO NEXT ID IN SEQUENCE
	  DEC OBJINX
	MIEND
	THEN
	RTS
;PLAYER ID SEQUENCES FOR COLLISION PROCESSING
ROBJID:	.BYTE 2,0A		;ATTACKER 1:L,R
	.BYTE 0A,2		;R,L
	.BYTE 4,0C		;ATTACKER 2:R,L
	.BYTE 0C,4		;L,R
	.BYTE 0,8		;GOALIES: L,R
	.BYTE 8,0		;R,L
	.BYTE 0E,6		;DRONES: R,L
	.BYTE 6,0E		;L,R
	.BYTE BALLNO*2,BALLNO*2	;BALL FIRST ALWAYS
QCHKS3:	.BYTE CHKSM3		;CHECKSUM 3 (2A00)
	.PAGE
	
	.SBTTL TEST FOR & PROCESS COLLISION
COLLIS:
	.SBTTL CALCULATE X Y DELTA
	LDX OBJECT
	LDY PLAYER
	LDA AX,FLAGS
	ORA AY,FLAGS
	AND I,FINACT		;EITHER PLAYER INACTIVE?
	IFNE
	  RTS			;YES, NO CLLISION
	THEN
	LDA AY,HPOSL		;DISCARD FRACTION
	AND I,0E0
	STA J
	LDA X,HPOSL		;CALCULATE DELTA H AND !DELTA H!
	SEC
	SBC J
	AND I,0E0
	STA AVHDL
	STA HDISP
	LDA X,HPOSH
	SBC AY,HPOSH
	STA AVHDH
	STA HDISP+1
	IFCC			;(IF NEGATIVE, MAKE IT POSITIVE)
	  DPNEGA AVHDL,AVHDL
	  LDA AY,ORDER		;INCREMENT Y PLAYER'S ORDER SINCE
	  CLC
	  ADC I,1		;Y IS TO THE RIGHT OF (>) X.
	  STA AY,ORDER	
	ELSE
	  INC AX,ORDER		;INCREMENT X PLAYER'S ORDER.
	THEN
	LDA I,0			;CALC!DELTA V! AND SIGN (VDISP)
	STA VDISP
	LDA X,VPOS		;FUN WITH UNSIGNED #'S.
	CMP AY,VPOS
	IFCS
	  SBC AY,VPOS
	ELSE
	  LDA AY,VPOS
	  SEC
	  SBC ZX,VPOS
	  DEC VDISP
	THEN
	STA AVVD
	LDA AVHDH		;NORMALIZE THE HORIZONTAL DELTA
	AND I,1F
	CMP AVHDH		;IF H DELTA EXCEEDS 255
	IFNE			;DOTS, THEN SET IT TO
	  LDA I,0FF		;255
	ELSE			;OTHERWISE, CONVERT 2
	  ASL			;BYTE H DELTA TO
	  ASL			;1 BYTE FORMAT
	  ASL
	  STA AVHD
	  LDA AVHDL
	  LSR
	  LSR
	  LSR
	  LSR
	  LSR
	  ORA AVHD
	THEN
	STA AVHD		;FALL INTO NEXT PAGE
	.PAGE
	.SBTTL WAS THERE COLLISION?
	CPX I,BALLNO*2		;BALL-OBJECT?
	IFNE
	  LDY I,14.		;NO. PLAYER-PLAYER SET COLLISION DISTANCE 14 DOTS
	ELSE
	  LDA AY,TEAM		;YES. BALL PLAYER
	  LDY DSTAWA		;SET COLLISION DISTANCE 47 DOTS FOR 10 YD RULE
	  CMP TENYDS		;TEN YARD RULE IN EFFECT FOR THIS PLAYER?
	  IFNE
	    LDY I,10.		;NO. SET COLLISION DISTANCE 10 DOTS
	  THEN
	THEN
				; MUST BE < Y FOR COLLISION
	CPY AVVD		;IS DELTA V OR DELTA H WITHIN
	IFCS			;COLLISION RANGE?
	  CPY AVHD
	  IFCS
	    LDA I,0		;INITIALIZE SCALE DOWN FACTOR TO 0
	    STA FACTOR
	    TYA
	    BEGIN		;YES. MUST DELTAS AND COLLISION RANGE
	      CMP I,16.		;BE SCALED DOWN?
	      IFCS
	        LSR		;YES. DIVIDE BY 2 AND KEEP
	        LSR AVVD	;TRACK
	        LSR AVHD
	        INC FACTOR
	        SEC
	      THEN
	    CCEND
	    TAY			;CALCULATE MAX V2 + H2 (SQUARES)
	    LDA AY,SQUARE
	    STA MAXISQ
	    LDY AVVD
	    CLC
	    LDA AY,SQUARE	;IS DELTA V2 +DELTA H2
	    LDY AVHD		;WITHIN COLLISION RANGE?
	    ADC AY,SQUARE
	    IFCC		;OVERFLOW FROM ADD?
	    CMP MAXISQ		;NO. V2 + H2 < (COL DIST)2?
	    IFCC
	      LDY PLAYER
	      CPX I,BALLNO*2	;YES. WE HAVE COLLISION
	      IFEQ		;BALL?
	        LDA AY,TEAM
	        CMP TENYDS	;YES. TEN YARD RULE?
	        IFNE
	          JSR BALCOL	;NO. REGULAR PLAYER-BALL
	        ELSE
	          LDX I,-1	;YES. KEEP PLAYER 10 YDS FROM BALL
	          		;(DON'T MOVE BALL)
	          JSR COLMOV	;YES. 10 YARDS BET. PLAYER-BALL
	        THEN
	      ELSE
		LDA AX,OPARAM	;DON'T MOVE A GOALIE
		AND I,GOALIE
		IFNE
		  LDX I,-1	;X IS A GOALIE
		THEN
		LDA AY,OPARAM
		AND I,GOALIE
		IFNE
		  LDY I,-1	;Y IS A GOALIE
		THEN
	        JSR COLMOV	;UNDO PLAYER-PLAYER COLLISION
	      THEN
	    THEN
	    THEN
	  THEN
	THEN
	RTS
	.PAGE
	.SBTTL	COLLISION MOVE
;MOVE PLAYER(X) & PLAYER(Y) OUT OF COLLISION
COLMOV:	
	STX J
	STY K
	LDA J			;SET(-) OR CLEAR(+) "MOVE JUST ONE" FLAG
	ORA K
	STA DOUBLE
	LDX I,0			;CLEAR FRACTIONAL V CORRECTION
	STX TVINC
	LDY AVVD		;MOVE OBJECTS OUT OF COLLISION BY ADJUSTING IN
	CPY AVHD		;DIRECTION IN HICH DELTA IS GREATEST
	IFCS
	  STX THINC		;V>=H, SO NO H ADJUSTMENT
	  STX THINC+1
	  LDA VDISP		;(SIGN OF CORRECTION)
	  LDX AVHD		;(X=UNCORRECTED DELTA(H); Y=DELTA TO CORRECT(V))
	  JSR MAXSQR		;CALCULATE CORRECTION
	  STA TVINC+1
	  LDX J
	  IFPL			;MOVE 1ST OBJECT?
	    JSR MOVER		;YES. DO IT
	  THEN
	  LDA TVINC+1		;NEGATE CORRECTION FOR 2ND OBJECT
	  NEGACC
	  STA TVINC+1
	ELSE
	  STX TVINC+1		;V<H, SO NO V ADJUSTMENT
	  LDA HDISP+1		;(SIGN OF CORRECTION)
	  LDX AVVD		;(X=UNCORRECTED DELTA(V); Y=DELTA TO FIX(H))
	  LDY AVHD
	  JSR MAXSQR		;CALCULATE CORRECTION
	  JSR ONETWO		;CONVERT SP TO DP
	  STY THINC
	  STA THINC+1
	  LDX J			;MOVE 1ST OBJECT?
	  IFPL
	    JSR MOVER		;YES. DO IT
	  THEN
	  DPNEGA THINC,THINC	;NEGATE CORRECTION FOR 2ND OBJECT
	THEN
	LDX K			;MOVE 2ND OBJECT?
	IFPL
	  JSR MOVER		;YES. DO IT
	THEN
	RTS
	.PAGE
	.SBTTL COLLISION CORRECTION
;
;SUBROUTINE TO CALCULATE THE CORRECTION FOR AN OBJECT
;INPUT:	Y=CURRENT V OR H DELTA TO BE CHANGED (LARGEST DELTA)
;	X=CURRENT H OR V DELTA TO REMAIN THE SAME
;FACTOR	=SCALE-DOWN FACTOR
;	ACC=SIGN OF RESULT
;MAXISQ	=MAX VALUE FOR SUM OF SCALED DOWN DELTA SQUARES
;OUTPUT: ACC=# OF DOTS TO MOVE EACH OBJECT TO CORRECT COLLISION
;
MAXSQR:	STA TEMPC
	LDA AX,SQUARE
	STY TEMPB
	STA TEMP
	BEGIN			;FIND THE DELTA BETWEEN OBJECTS WHICH WOULD
	  INY			;RESOLVE THE COLLISION, LEAVING THE OTHER
	  LDA AY,SQUARE		;COMPONENT AS IS
	  CLC
	  ADC TEMP		;IF SQUARE TOTAL EXCEEDS 225, THEN WE'VE GOT IT.
	  IFCC
	    CMP MAXISQ
	  THEN
	CSEND			;NOW DIVIDE IT BY 2 AND ROUND UP, GIVING
	TYA			;THE # OF DOTS TO MOVE EACH PLAYER
	SEC
	SBC TEMPB
	LDX FACTOR		;WERE DELTAS SCALED DOWN?
	IFNE
	  BEGIN			;YES. SCALE CORRECTION BACKUP
	    ASL
	    DEX
	  EQEND
	THEN
	LDX DOUBLE		;ARE BOTH OBJECTS TO BE MOVED?
	IFPL
	  LSR			;YES. SPLIT CORRECTION IN HALF
	  ADC I,0
	THEN
	LDX TEMPC		;USE ORIGINAL SIGN TO SET THAT OF CORRECTION
	IFMI
	  NEGACC
	THEN
	RTS
;
;SQUARES FOR 0 THRU 16
;
SQUARE:	.BYTE 0,1,4,9,16.,25.,36.,49.,64.,81.,100.,121.
	.BYTE 144.,169.,196.,225.,255.
	.PAGE
	.SBTTL INITIALIZE BALL
INIBAL:	LDA I,0FF
	STA BPCOLID
	STA DRIBBL
	STA LSTUCH
	STA DRONPL
	STA PLSTUC
	STA BALPLA
	STA BALTIM
	LDA I,0
	STA UPVEL
	STA HEIGHL
	RTS
	.PAGE
	.SBTTL INITIAL BALL-PLAYER COLLISION PROCESSING
;Y=ID OF PLAYER COLLIDING W. BALL
BALCOL:
	LDA PLAOPT
	AND I,RULES		;PLAYING WITH OFFSIDE RULE?
	IFNE
	  LDA AY,FLAGS	;YES. PLAYER OFFSIDES?
	  AND I,FOFFSI
	  IFNE
	    JMP PENOFF	;YES. FREE KICK FOR OTHER TEAM
	  THEN
	THEN
	CPY DRIBBL		;IS PLAYER THE DRIBBLER?
	IFNE
	  LDA BALTIM		;NO. NO COLL, IF BALL TOO HOT
	  CMP AY,REACTI		;(JUST PLAYED)
	    BCC BYE		;TOO HOT. NO COLL.
	  LDA HEIGHL		;NO COLLISION IF BALL IS TOO HIGH.
	  CMP I,2
	    BCS BYE		;TOO HIGH. NO COLLISION.
	  LDA BALPLA		;DON'T RECATCH BALL IF PASSING IT TO TEAMMATE
	  IFPL
	    CPY LSTUCH
	      BEQ BYE
	  THEN
	  LDA I,0		;STOP BALL FROM RISING
	  STA UPVEL
	  LDX DRIBBL		;IF THE DRIBBLER IS A
	  IFPL
	  LDA AX,FLAGS		;GOALIE & HE'S
	  AND I,FCATCH		;CAUGHT THE BALL,
	  IFNE
	    LDX I,-1		;DON'T GIVE UP THE BALL
	    JMP COLMOV
	  THEN
	  LDA AY,FLAGS		;DON'T LET DRONE KICK BALL AWAY FROM TEAMMATE
	  AND I,DRONE
	  IFNE
	    LDA AX,TEAM
	    CMP AY,TEAM
	    IFEQ
	      LDX I,-1
	      JMP COLMOV
	    THEN
	  THEN
	  INC STEAL		;INCREMENT BALL STEALS COUNTER
	  THEN
	  LDA LSTUCH		;PREV. TOUCHER
	  STA PLSTUC
	  STY LSTUCH
	  STY BPCOLID		;SAVE # OF PLAYER WHO HIT BALL
	  LDA A,FLAGS+<BALLNO*2>
	  ORA I,ATGOAL
	  STA A,FLAGS+<BALLNO*2>
	  JSR CLRKIK		;CLEAR KICKOFF
	  LDX OBJECT		;MOVE BALL, BUT NOT PLAYER
	  LDY I,-1
	  JSR COLMOV		;PUT BALL AT POINT OF COLLISION
	THEN
BYE:	RTS
;TABLE OF MAXIMUM BALL HEIGHTS & REACTION TIMES AT WHICH PLAYER CAN COLLIDE WITH BALL
MAXHI:	.BYTE 2,2		;GOALIE
	.BYTE 2.,3		;ATTACKER
	.BYTE 2.,3		;ATTACKER
	.BYTE 2.,5		;DRONE
	.BYTE 2.,2		;SAME
	.BYTE 2.,3
	.BYTE 2.,3
	.BYTE 2.,5
REACTI	=MAXHI+1
	.SBTTL BALL CONTROL
PBALL:				;BALL CONTROL
	DEC TIMSTL
	IFMI			;EVERY X FRAMES CLEAR STEAL COUNTER.
	  LDA I,5
	  STA TIMSTL
	  LDA I,0
	  STA STEAL
	THEN
	LDA STATE		;NO BALL PROC. IN PAUSE
	CMP I,S.PAUS		;STATE
	IFEQ
	  RTS
	THEN
	JSR CALZON		;DETERMINE BALL LOCATION
	LDY BPCOLID		;DID BALL COLLIDE WITH A PLAYER?
	IFMI
	  LDY DRIBBL		;NO, IS BALL BEING DRIBBLED?
	  IFMI
	    LDA A,FLAGS+<BALLNO*2>	    ;NO
	    AND I,ATGOAL
	    IFEQ			;HAVE A GOAL?
	      LDX I,BALLNO*2		;YES
	      LDY BALPLA	;BALL TO PLAYER (GUIDED)?
	      IFPL
	        LDA BALTIM	;GUIDED
	        CMP I,14
	        IFCS		;BEEN GUIDED TOO LONG?
	          LDA I,0FF
	          STA BALPLA
		  LDA A,FLAGS+<BALLNO*2>
		  ORA I,ATGOAL
		  STA A,FLAGS+<BALLNO*2>
	          JSR SLOBAL	;YES. CUT IT LOOSE TO SLOW DOWN ON ITS OWN
	        ELSE
	          JSR PLAGOL	;NO. CONTINUE GUIDING IT TO PLAYER
		  JSR GOALC
		THEN
	       ELSE
		JSR GOALC	;NOT GUIDED. SEND TO GOAL
	       THEN
	    ELSE			;NO GOAL
	      JSR SLOBAL		;SLOW IT
	    THEN
	    LDA BALTIM		;INCREMENT BALL TIMER, MAX AT FF.
	    CMP I,0FF
	    IFCC
	      INC BALTIM
	    THEN
	  ELSE
	    JSR DRIBIT		;YES, SO DRIBBLE IT
	  THEN
	ELSE			;YES, BALL COLLIDED WITH A PLAYER,SO
  	  LDA I,0FF
	  STA BPCOLID		;CLEAR OUT PLAYER #
	  STA BALPLA
	  STA BALTIM
	  STY DRIBBL		;GIVE PLAYER THE BALL
	  LDA AY,OPARAM		;GO TO SPECIAL ROUTINE
	  AND I,GOALIE		;TO HANDLE BALL-PLAYER
	  IFNE			;COLLISON
	    JSR GOABAL		;GOALIE-BALL COLLISION
	  ELSE
	    JSR DRIBIT		;ATTACKER OR DRONE-BALL COLLISION
	  THEN
	THEN
	.PAGE
	.SBTTL BALL HEIGHT/PICTURE CALCULATION
	LDA UPVEL		;UPDATE BALL'S HEIGHT & VELOCITY.
	SEC
	SBC I,GRAVIT
	STA UPVEL		;GRAVITY'S EFFECT ON VELOCITY.
	CLC 
	ADC HEIGHL		;UPDATE HEIGHT WITH VELOCITY.
	IFMI			;IF HIT GROUND THIS TIME
	  LDA UPVEL		;THEN BOUNCE IT WITH 1/2 IMPACT VELOCITY.
	  NEGACC
	  CMP I,80
	  ROR
	  STA UPVEL
	  LDA I,0
	THEN
	STA HEIGHL
;
	LDA HEIGHL		;DEDUCE BALL PICTURE # (-1 TO 4) FOR ITS HEIGHT
	LDX I,3
	BEGIN
	  CMP AX,HITABL
	  BCS GOTX
	  DEX
	MIEND
GOTX:	INX
	TXA
	CLC
	ADC I,PICBL1
	STA A,LPICT2+<BALLNO*2>
	EOR I,REVERS!FLIPPR
	STA A,LPICT1+<BALLNO*2>
	.PAGE
	.SBTTL BALL NEAR NET CHEER
	LDA STATE
	CMP I,S.PLAY			;ONLY WHEN PLAYING
	IFEQ
	LDA BALPEN
	IFEQ			;IF BALL IS IN PENALTY AREA, INCREASE SOUND
	  LDY ABGHDL
	  LDA ABGHDL+1
	  JSR TWOONE
	  CLC
	  ADC ABGVD
	  STA J
	  LDA I,9E		;INCREASE CROWD CHEER TO (9E-J)*2
	  SEC
	  SBC J
	  JSR NEWCHR
	THEN
	THEN
;
;
	LDX I,BALLNO*2		;UPDATE BALL'S POSITION
	JSR MOVER
	.PAGE
	.SBTTL KEEP BALL IN BOUNDS
;
;BOUNDARY DEFINITIONS: EACH VALUE REPRESENTS THE LOCATION OF THE LINE
;
BOTGOH	=BNET+3
TOPGOH	=TNET-4
BOTMLO	=0
BOTMHI	=BSIDEL+3
TOPBDL	=0
TOPBDH	=TSIDEL-4
LEFBDL	=<LENDL+0A0>&0FF
LEFBDH	=<LENDL+0A0>/100
LEFGOL	=<LGOAL+080>&0FF
LEFGOH	=<LGOAL+080>/100
RITBDL	=<RENDL-80>&0FF
RITBDH	=<RENDL-80>/100
RITGOL	=<RGOAL-060>&0FF
RITGOH	=<RGOAL-060>/100
;
;KEEP THE BALL IN BOUNDS
;
	LDA BVPOSL+1
	CMP I,BOTMHI+1
	IFCC			;IS IT BELOW BOTTOM BOUNDARY?
	  LDA I,BOTMLO		;YES
	  STA BVPOSL
	  LDA I,BOTMHI+1
	  STA BVPOSL+1
				;OUT OF BOUNDS ON SIDELINES
	  JSR OOBSID
	ELSE			;NO
	  LDA BVPOSL+1
	  CMP I,TOPBDH
	  IFCS			;IS IT ABOVE TOP BOUNDARY?
	    LDA I,TOPBDL	;YES
	    STA BVPOSL
	    LDA I,TOPBDH-1
	    STA BVPOSL+1
				;OUT OF BOUNDS ON SIDELINES
	    JSR OOBSID
	  THEN
	THEN
	COMPARE BHPOSL,BHPOSL+1,<I,LEFBDL>,<I,LEFBDH>
	IFCC
	  JSR ISITGO		;IS THE BALL IN VERTICAL GOAL POS?
	  IFNE
	  COMPARE BHPOSL,BHPOSL+1,<I,LEFGOL>,<I,LEFGOH>
	    IFCC		;HAS BALL PASSED THE GOAL LINE?
	      LDA I,LEFGOL	;YES-POSITION BALL
	      STA BHPOSL	;IN GOAL
	      LDA I,LEFGOH
	      STA BHPOSL+1
	      JSR UPRSCOR	;SCORE FOR LEFT SIDE
	    THEN
	  ELSE
	    LDA I,LEFBDL
	    STA BHPOSL
	    LDA I,LEFBDH
	    STA BHPOSL+1
	    			;OUT OF BOUNDS ON ENDLINES
	    JSR OOBEND
	  THEN
	ELSE
	  COMPARE BHPOSL,BHPOSL+1,<I,RITBDL>,<I,RITBDH>
	  IFCS
	  JSR ISITGO		;IS THE BALL IN VERTICAL GOAL POS?
	  IFNE
	    COMPARE BHPOSL,BHPOSL+1,<I,RITGOL>,<I,RITGOH>
	    IFCS			;HAS BALL PASSED THE RIGHT GOAL LINE?
	      IFNE
	      LDA I,RITGOL	;YES-POSITION BALL IN GOAL
	      STA BHPOSL
	      LDA I,RITGOH
	      STA BHPOSL+1
	      JSR UPLSCOR		;SCORE FOR RIGHT SIDE
	      THEN
	    THEN
	  ELSE
	      LDA I,RITBDL
	      STA BHPOSL
	      LDA I,RITBDH
	      STA BHPOSL+1
	      			;OUT OF BOUNDS ON ENDLINES
	      JSR OOBEND
	      THEN
	  THEN
	THEN
	JMP CALZON		;CALCULATE V & H BALL ZONES
ISITGO:
	LDA I,0			;VERTICAL GOAL TEST
	LDX BVPOSL+1
	CPX I,BOTGOH
	IFCS			;ABOVE ?? OF GOAL?
	  CPX I,TOPGOH+1	;YES. BELOW TOP?
	  IFCC
	    LDA I,1		;YES. GOAL AREA
	  THEN
	THEN
	ASL			;SET OR CLEAR Z FLAG.
	RTS
OOBSID:
	LDA BVVEL		;BOUNCE BALL
	NEGACC
	STA BVVEL
	RTS
OOBEND:
	LDA BHVEL		;BOUNCE BALL
	NEGACC
	STA BHVEL
	RTS
HITABL:	.BYTE COLHIT,30,50,70
;
GRAVIT=1
	.PAGE
	.SBTTL DRONE HAS BALL
DROBAL:
	LDA LSTSET		;IF THIS IS A KICKOFF
	EOR I,CKIKOF
	EOR PLSTUC		;AND NOBODY ELSE HAS TOUCHED THE BALL
	CMP I,-1
	IFEQ
	  LDA I,40		;THEN KICK IT ALONG THE CENTERLINE
	  STA BVVEL
	  LDA I,0
	  STA BHVEL
	  JMP VEKICK		;DO AN UNGUIDED KICK
	THEN
	LDA STEAL
	CMP I,3			;IF BALL IS IN A STEAL LOOP,
	BCS DUMKIK		; THEN GO DO A DUMB KICK.
	  JSR PLAWAN		;NO. KICK IT TO A TEAMMATE IF HIS BUTTON DEPRESSED
	  IFNE
	    JSR DRTOGO		;NO. KICK IT TOWARDS GOAL CORNER IF IN RANGE
	    IFNE
	      LDY DRIBBL
	      LDA AY,OPARAM	;NO.
	      AND I,DRONE
;	      IFEQ		;FULL TIME DRONE?
	        BEQ DUMKIK	;NO. ATTRACT MODE DRONE. KICK IT
;	      ELSE
	        LDA HBALZO	;YES. IS HE IN OFFENSE HALF
	        CMP AY,TEAM	;OF FIELD?
	        IFNE
	          LDA ABGHDL+1	;YES
		  CMP I,<LPENA-LGOLI>/100+6
		  IFCC		;IS BALL CLOSE TO PENALTY AREA?
	            LDA AY,TEAM	;YES. KICK BALL TO TEAMMATE
	            TAY		;(DRONE COULDN'T SHOOT)
	            LDA AY,PASTO
	            TAY
	            JMP KIKTOP
	          THEN
	        THEN
;	      THEN
	      JMP DRIPOS	;IF ALL ELSE FAILS, DRIBBLE IT
	    THEN
	  THEN
	RTS
PASTO:	.BYTE 2,0,0C		;ACTIVE (ALWAYS) ATTACKER ID'S
	.PAGE
	.SBTTL DRONE GOAL SHOT
DRTOGO:
	LDA I,1
	STA TEMPB
	LDA HBALZO		;IN OFFENSIVE HALF OF FIELD?
	CMP AY,TEAM
	IFNE
	  LDA BALPEN
	  IFEQ			;IS BALL IN PENALTY AREA?
	      LDX I,BALLNO*2
	      LDY HBALZO
	      JSR TOGOLC	;YES. SEND BALL TO NEAREST GOAL CORNER
	      JSR GOKICK	;DO A GUIDED KICK
	      DEC TEMPB		;SET DONE WITH BALL FLAG
	  THEN
	THEN
	LDA TEMPB
	RTS
;
HCORGL:	.BYTE LEFGOL-10,LEFGOH,RITGOL+10,RITGOH
	.SBTTL SEND OBJECT TO NEAREST CORNER OF GOAL
;INPUT:X=OBJECT TO BE SENT
;Y=TEAM GOAL ID
TOGOLC:
	LDA AY,HCORGL
	STA AX,HGOAL
	LDA AY,HCORGL+1
	STA AX,HGOAL+1
	LDA I,BOTGOH+2
	LDY BGVD
	IFPL
	  LDA I,TOPGOH
	THEN
	STA AX,VGOAL
	RTS
	.PAGE
	.SBTTL DRONE RANDOM KICK
DUMKIK:
	LDY LSTUCH		;GET DRONE ID
	LDA FRAME		;GET RANDOM # FROM 0 TO 80
	ASL
	ASL
	LDX AY,HVVEL
	IFPL			;IS DRONE MOVING UP?
	  LDX BVPOSL+1		;UP, BUT TOO CLOSE TO TOP?
	  CPX I,225.
	    BCC NONEG
	THEN
	  NEGACC		;DRONE MOVING DOWN. KICK BALL DOWN
NONEG:	STA BVVEL
	LDX AY,TEAM		;KICK BALL AWAY FROM OWN GOAL
	LDA I,2F
	CPX I,RIGHT
	IFEQ
	  LDA I,-2F
	THEN
	STA BHVEL
	JMP VEKICK		;PERFORM UNGUIDED KICK
	.PAGE
	.SBTTL GOALIE BALL COLLISON
GOABAL:
	LDY PLSTUC
	IFPL			;IF TEAMMATE TOUCHED BALL LAST, THEN CATCH IT.
	  LDA AY,TEAM
	  LDY DRIBBL
	  CMP AY,TEAM
	   BEQ GCATBA		;CATCH BALL BECAUSE IT'S A PASS FROM TEAMMATE.
	ELSE
	  LDY DRIBBL
	  JSR PLAWAN		;THIS IS A FREE KICK. GET RID OF BALL
	  IFNE			;SOMEBODY CALL FOR IT?
	    JMP NOBODY		;NO. THEN JUST KICK IT AWAY
	  THEN
	THEN
	LDX I,BALLNO*2
	JSR RESULT		;IF BALL IS GOING LESS THAN A
				;CERTAIN SPEED, THEN MAKE HIM CATCH IT.
	CMP I,10		;(CATCH SPEED)
	  BCC GCATBA		;GOALIE CATCHES BALL
	  LDA FRAME		;DEFLECT,PUNCH,OR CATCH BALL
	  CMP I,13.
	    BCC GDEFBA		;1/3:GOALIE DEFLECTS BALL
	    CMP I,7.
	      BCS GPUNBA	;1/3:HE PUNCHES BALL
				;1/3:HE CATCHES BALL (FALL INTO NEXT PAGE)
	.PAGE
	.SBTTL GOALIE CATCHES BALL
;Y=GOALIE ID
GCATBA:
	STY DRONPL		;PUT OUT CALL TO BRING DRONE UP
	LDA I,4*FPSECO		;GIVE PLAYERS 4 SECONDS TO PRESS
	STA TIMER1		;THEIR KICK SWITCHES
	LDA I,VCENTR		;SEND GOALIE TO FRONT CENTER
	STA AY,VGOAL		;OF HIS PENALTY AREA
	LDX AY,TEAM
	LDA AX,CNTPNL
	STA AY,HGOAL
	LDA AX,CNTPNL+1
	STA AY,HGOAL+1
	LDA AY,FLAGS		;SET GOALIE AS HAVING
	AND I,NATGOAL		;CAUGHT THE BALL AND THAT
	ORA I,FCATCH		;HE HAS A GOAL
	STA AY,FLAGS
	JMP DRIPOS		;CALCULATE BALL'S MOVEMENT (USE ITS RTS)
CNTPNL:	.WORD LGOLI+500,RGOLI-500
	.SBTTL GOALIE PUNCHES BALL
GPUNBA:				;HAVE GOALIE PUNCH THE BALL BACK IN
				;THE SAME DIRECTION
	JSR OOBSID
	JSR OOBEND
	JMP VEKICK		;AN UNGUIDED KICK
	.SBTTL GOALIE DEFLECTS BALL
GDEFBA:	LDA I,20		;DEFLECT BALL UP IF IT IS ABOVE CENTER
	LDX BVPOSL+1
	CPX I,VCENTR
	IFCC
	  NEGACC		;DOWN IF BELOW CENTER
	THEN
	STA BVVEL
	JMP VEKICK		;AN UNGUIDED KICK
	.PAGE
	.SBTTL DECELERATE BALL
SLOBAL:
	LDA BVVEL		;SET H & V TO X1-(X1-1F)/32.
	JSR SLOWIT
	STA BVVEL
	LDA BHVEL
	JSR SLOWIT
	STA BHVEL
	JMP VELINC		;UPDATE ITS VELOCITY (USE ITS RTS)
SLOWIT:
	STA TEMP
	ABSACC
	CLC
	ADC I,1F
	LSR
	LSR
	LSR
	LSR
	LSR
	LDX TEMP
	IFPL
	  NEGACC
	THEN
	CLC
	ADC TEMP
	RTS
QCHKS4:	.BYTE CHKSM4		;4TH CHECKSUM (2E00)
	.PAGE
	.SBTTL KICK TO BUTTON PRESSING TEAMMATE IF ANY
;IN:  Y=# OF PLAYER DRIBBLING BALL
;OUT: Z=1: KICKED BALL; N=1 DIDN'T
;Y DESTROYED
PLAWAN:
	  LDA AY,TEAM		;SET Y=ID OF 1ST PLAYER TO TEST
	  ASL
	  ASL
	  ADC I,4		;CHECK TO SEE IF ANY OF HIS TEAMMATES
	  TAY			;HAS HIS KICK BUTTON DEPRESSED
	  LDA I,1		;CHECK 2 PLAYERS
	  STA J
	  BEGIN
	    CPY DRIBBL		;DON'T COUNT DRIBBLER
	    IFNE
	    LDA AY,KIKBUT
	    AND Z,KSWIT		;YES. KICK BUTTON IS PRESSED.
	    IFEQ
	      LDA AY,FLAGS
	      AND I,FOFFSI!DRONE!FINACT	;IS PLAYER OFFSIDES OR A DRONE OR INACTIVE?
	      IFEQ
	        JSR KIKTOP	;NO. KICK BALL TO HIM
	        LDA I,0		;SET KICKED FLAG
	        RTS
	      THEN
	    THEN
	    THEN
	    DEY
	    DEY
	    DEC J
	  MIEND
	RTS			;RETURN WITHOUT KICKING
	.PAGE
	.SBTTL DRIBBLE BALL
;DRIBBL AND Y=DRIBBLER ID
DRIBIT:
	LDA AY,FLAGS
	AND I,DRONE
	IFNE			;IS THIS A DRONE DRIBBLER?
	  JMP DROBAL		;YES. GO TO DRONER
	THEN
	JSR PLAWAN		;KICK BALL TO TEAMMATE PRESSING BUTTON IF ANY
	IFNE			;DISPOSED OF BALL?
	  LDY DRIBBL
	  LDA AY,OPARAM		;NO. GOALIE DRIBBLER?
	  AND I,GOALIE
	  IFNE
	    LDA TIMER1		;YES. NOBODY ASKED FOR BALL. IS TIME UP?
	    IFEQ
	      JMP NOBODY	;YES. KICK IT TO DRONE OR DOWNFIELD
	    THEN
	    JMP DRIPOS		;NO. KEEP GOALIE DRIBBLING
	  THEN
	LDX DRIBBL
	LDA AX,FLAGS
	AND I,FINACT
	IFNE			;IF DRIBBLER IS INACTIVE
	  JMP PLANGL		;HAVE HIM KICK BALL AWAY
	THEN
	LDA AX,KIKBUT		;KICK BUTTON PRESSED?
	AND Z,KSWIT
	IFEQ
	  JMP PLANGL		;YES. KICK BALL
	THEN
	  JMP DRIPOS		;NO SO JUST DRIBBLE
	THEN
	RTS
	.PAGE
	.SBTTL DRIBBLE TABLE
;
;ANGULAR DISPLACEMENT TABLES
;
VANGDSP:.BYTE 0C		;VERTICAL DISPLACEMENT IF FACING N
	.BYTE 0A
	.BYTE 08
	.BYTE 5
	.BYTE 0			;E
	.BYTE -5
	.BYTE -08
	.BYTE -0A
	.BYTE -0C		;S
	.BYTE -0A
	.BYTE -08
	.BYTE -5
	.BYTE 0			;W
	.BYTE 5
	.BYTE 08
	.BYTE 0A
HANGDS:	.BYTE 0,0		;HORIZONTAL DISPLACEMENT IF FACING N+0
	.BYTE 0,0A0		;+5
	.BYTE 1,0		;+8
	.BYTE 1,40		;+10
	.BYTE 1,80		;E+12
	.BYTE 1,40		;+10
	.BYTE 1,0		;+8
	.BYTE 0,0A0		;+5
	.BYTE 0,0		;S+0
	.BYTE 0FF,060		;-5
	.BYTE 0FF,0		;-8
	.BYTE 0FE,0C0		;-10
	.BYTE 0FE,80		;W-12
	.BYTE 0FE,0C0		;-10
	.BYTE 0FF,0		;-8
	.BYTE 0FF,060		;-5
	.PAGE
	.SBTTL DRIBBLE POSITION
;INPUT:	DRIBBL=DRIBBLER ID
DRIPOS:	LDX DRIBBL
	LDA AX,OBDIRC		;DIRECTION
	LSR			;(CONVERT TO USABLE INDEX)
	AND I,0F
	TAY
	CLC			;NOW ADD THE V AND H
	LDA AY,VANGDSP		;COMPONENTS OF THE BALL'S
	IFPL			;ANG DISP FROM PLAYER
	  ADC ZX,VPOS		;WATCH OUT FOR WRAP
	  CMP ZX,VPOS		;AROUND NEAR BOTTOM
	  IFCS			;AND TOP OF FIELD
	    STA A,VGOAL+<BALLNO*2>
	  THEN
	ELSE
	  ADC ZX,VPOS
	  CMP ZX,VPOS
	  IFCC
	    STA A,VGOAL+<BALLNO*2>
	  THEN
	THEN
	TYA
	ASL
	TAY
	CLC			
	LDA AY,HANGDS+1		
	ADC ZX,HPOSL
	STA A,HGOAL+<BALLNO*2>
	LDA AY,HANGDS
	ADC ZX,HPOSL+1
	STA A,HGOAL+<BALLNO*2>+1
	LDX I,BALLNO*2
	JSR NEWGOL
	JMP OFFCHK		;OFFSIDES ANALYSIS
	.PAGE
	.SBTTL ANGULAR KICK TABLE
;
;VELOCITY TABLE FOR KICKS AS A FUNCTION OF FACING DIRECTION
;
HVELDI:	.BYTE 0			;0 (N)
VVELDI:	.BYTE 44
	.BYTE 1E		;1 NNE
	.BYTE 3C
	.BYTE 30		;2 NE
	.BYTE 30
	.BYTE 3C		;3 NEE
	.BYTE 1E
	.BYTE 44		;4 E
	.BYTE 0
	.BYTE 3C		;5 SEE
	.BYTE -1E
	.BYTE 30		;6 SE
	.BYTE -30
	.BYTE 1E		;7 SSE
	.BYTE -3C
	.BYTE 0		;8 S
	.BYTE -44
	.BYTE -1E		;9 SSW
	.BYTE -3C
	.BYTE -30		;A SW
	.BYTE -30
	.BYTE -3C		;B SWW
	.BYTE -1E
	.BYTE -44		;C W
	.BYTE 0
	.BYTE -3C		;D NWW
	.BYTE 1E
	.BYTE -30		;E NW
	.BYTE 30
	.BYTE -1F		;F NNW
	.BYTE 3C
	.PAGE
	.PAGE
	.SBTTL GOALIE GETS RID OF BALL
NOBODY:				;NEITHER ATTACKER TEAMMATE WANTS BALL.
	LDA FRAME
	AND I,3			;SO IT'S 1/3 WHETHER TO:
	IFEQ
	  LDA AY,TEAM		;1) KICK IT TO DRONE, OR
	  ASL
	  ASL
	  CLC
	  ADC I,6		;(Y=DRONE ID)

	  TAY
	  BNE KIKTOP
	THEN
	LDA I,10		;2) KICK IT DOWNFIELD.
	STA UPVEL		;  (LOFT IT)
	LDY DRIBBL
	LDX AY,TEAM
	LDA AX,HGKVEL		;  (IN CORRECT HORIZ DIRECTION)
	STA BHVEL
	LDA FRAME		;  (WITH MINOR VERTICAL DEVIATION)
	ASL
	ASL
	CLC
	ADC I,-40.
	STA BVVEL
	JMP VEKICK
;
HGKVEL:	.BYTE 50,0,-50		;HORIZ BALL VELOCITIES FOR L & R GOALIES.
	.PAGE
	.PAGE
	.SBTTL KICK BALL ACC TO PLAYER'S ANGLE
;X=PLAYER'S ID
PLANGL:
	LDA AX,OBDIRC		;GET PLAYER'S FACING ANGLE
	AND I,1E
	TAY			;MAKE IT INTO AN INDEX
	LDA AY,HVELDI		;SET UP BALL'S VELOCITY ACCORDING TO ANGLE
	STA BHVEL
	LDA AY,VVELDI
	STA BVVEL
	.PAGE
	.SBTTL KICKS
VEKICK:				;UNGUIDED KICK
	JSR VELINC		;CALC BALL'S V&H DISP FROM ITS VELOCITY
	LDA I,0FF		;BALL IS ON ITS OWN, SO CLEAR UP GUIDES FLAGS
	STA BALPLA
	LDA A,FLAGS+<BALLNO*2>
	ORA I,ATGOAL
	STA A,FLAGS+<BALLNO*2>
	BNE KICKBA		;PERFORM GENERAL KICK FUNCTIONS
;
	.SBTTL KICK BALL TO SPOT WHERE PLAYER STANDS
;Y=#OF PLAYER TO KICK BALL TO
KIKTOP:	STY BALPLA		;SAVE # OF PLAYER TO GUIDE BALL TO
				;PUT PLAYER'S VERTICAL
				;AND HORIZONTAL COORDINATES
				;INTO BALL'S GOAL
	LDX I,BALLNO*2
	JSR PLAGOL
GOKICK:				;GUIDED KICK
	LDA A,FLAGS+<BALLNO*2>	;SET NOT AT GOAL AND
	AND I,NATGOAL&NCATCH	;BALL NOT CAUGHT
	STA A,FLAGS+<BALLNO*2>	;FOR PLAYER
	LDX I,BALLNO*2
	JSR GOALC		;CALC BALL MVMT. TOWARDS GOAL
				;FALL INTO GENERAL KICK FUNCTIONS
;
KICKBA:				;GENERAL KICK FUNCTIONS
	LDA I,KIKSND		;SOUND
	STA THUD
	LDX I,0
	STX BALTIM		;TIMER (FRAMES SINCE KICK)
	DEX
	STX DRIBBL		;NO MORE DRIBBLER OR DRONE REQUEST
	STX DRONPL
				;FALL INTO OFFSIDES ANALYSIS
	.PAGE
	.SBTTL OFFSIDES ANALYSIS
;FUNCTION: SET OR CLEAR OFFSIDE STATUS FLAG FOR EACH PLAYER
OFFCHK:
	LDX I,LOBLOOP-2		;CLEAR OFFSIDE FLAGS FOR PLAYERS
	BEGIN
	  LDA AX,FLAGS
	  AND I,NOFFSI
	  STA AX,FLAGS
	  DEX
	  DEX
	MIEND
	LDA I,0			;DEFAULT: NEITHER TEAM OFFSIDES
	STA TEMOFF
	STA TEMOFF+2
	LDA PLAOPT
	AND I,RULES
	IFNE			;OFFSIDES RULE IN EFFECT?
	LDX I,LOBLOOP-2		;YES. (DON'T CHECK BALL)
	BEGIN
	  CPX LSTUCH
	  IFNE			;BALL LAST TOUCHED BY PLAYER?
	    LDY LSTUCH		;NO
	    LDA AY,TEAM
	    CMP AX,TEAM
	    IFEQ		;BY AN OPPONENT?
	      LDA ZX,HPOSH	;NO
  	      CMP I,HCENTR
	      LDA I,0		;(CS=RIGHT HALF, CC=LEFT HALF)
	      ROR
	      EOR AX,OPARAM
   	      IFMI		;PLAYER ON HIS OWN HALF OF FIELD?
	        LDA AX,ORDER	;NO
   	        CMP A,<BALLNO*2>+ORDER
	        LDA I,0		;(CS=BALL, PLAYER; CC=PLAYER,BALL)
 	        ROR
	        EOR AX,OPARAM
	        IFMI		;BALL BETWEEN PLAYER & GOAL?
		  LDY I,RTEAMN
	          LDA AX,OPARAM	;NO, 2 ENEMIES BETWEEN ME &GOAL?
	          IFMI
	            LDY I,LTEAMN
	          THEN
	          LDA I,6
	          STA K
	          LDA I,0		;(CLEAR SUPERIORS COUNTER)
	          STA J
	          LDA AX,ORDER
	          BEGIN			;(COMPARE MY ORDER AGAINST EACH ENEMY)
	            CMP AY,ORDER
	            IFCC
	              INC J
	            THEN
	            INY
   	            INY
	            DEC K
     	            DEC K
	          MIEND
	         LDA J
	         LDY AX,OPARAM
	         IFMI
	           EOR I,0FF
	           CLC
	           ADC I,5
	         THEN
	         CMP I,2
	          IFCC
	            LDA AX,FLAGS	;NO. SET OFFSIDES FLAG
	            ORA I,FOFFSI
	            STA AX,FLAGS
	            LDY AX,TEAM		;SET TEAM AS OFFSIDES TOO
		    LDA AY,TEMOFF
		    CLC
		    ADC I,1
		    STA AY,TEMOFF
	          THEN
	        THEN
	      THEN
	    THEN
	  THEN
	  DEX
	  DEX
	MIEND
	THEN
	JMP MOFFSI		;WRITE OR CLEAR OFFSIDES MESSAGES(RTS)
	.PAGE
	.SBTTL APPROX. HYPO
;IN: HVVEL & HHVEL=SIGNED X&Y
;XZ=PLAYER ID
;OUT:ACC=HYPOT
RESULT:
	LDA ZX,HHVEL		;CALC HYPOTENUSE GIVEN X&Y
	ABSACC			;=X+1/2Y, WHERE X>Y
	STA J
	LDA ZX,HVVEL
	ABSACC
	CMP J
	IFCC			;IS V < H?
	  LSR			;YES. HALF IT
	ELSE
	  LSR J			;NO. HALF H.
	THEN
	CLC
	ADC J			;ADD X
	RTS
	.PAGE
	.SBTTL CALCULATE BALL INCREMENT
VELINC:	LDA BVVEL		;NOW CALCULATE BALL'S V & H DISPLACEMENTS
	JSR ONETWO
	STY TVINC
	STA TVINC+1
	LDY I,0
	LDA BHVEL
	STA THINC
	IFMI
	  DEY
	THEN
	STY THINC+1
	ASL THINC		;QUADRUPLE SPEED
	ROL THINC+1
	ASL THINC
	ROL THINC+1
	RTS
	.SBTTL GUIDE 1 OBJECT (X) TO ANOTHER (Y)
PLAGOL:	LDA AY,HPOSL
	STA AX,HGOAL
	LDA AY,HPOSH
	STA AX,HGOAL+1
	LDA AY,VPOS
	STA AX,VGOAL
	RTS
	.END
                                                                                                                                                                                                                        