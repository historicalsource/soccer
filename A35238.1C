	.TITLE SALPHA
	.RADIX 16
	.SBTTL************************
	.SBTTL*
	.SBTTL* ROUTINE: ALPHA
	.SBTTL* PROGAMMER: DFT
	.SBTTL* FUNCTION: PROCESS ALPHANUMERIC(SIDE) DISPLAYS;
	.SBTTL*		  PERFORM TIME FUNCTIONS
	.SBTTL*
	.SBTTL************************
	.REPT 0
DATE INITIATED: 15-FEB-79
PROJECT CHARGE #: 20303
DISK #: 11
HARDWARE REQUIREMENTS:
MEMORY REQUIREMENTS:
INTERRUPT REQUIREMENTS:
ASSEMBLY COMMAND STRING:
LINK STRING:
PROGRAM DESCRIPTION: 
	(1) PROCESS REQUESTS TO DISPLAY ALPHANUMERIC
	    MESSAGES TO EITHER PLAYER ON THE SIDE OF THE SCREEN
	(2) KEEP TRACK OF THE GAME TIME
	.ENDR
	.PAGE
	.INCLUDE SOCOMN
	.PAGE
	.SBTTL SYMBOL DEFINITIONS
;
;EXTERNALLY DEFINED ENTRY POINTS
;
	.GLOBL KIKPOS,ONAROW,RSF,CLRARO,UPOSIT,INITIL
;
;GLOBAL ENTRY POINTS DEFINED IN THIS PROGRAM
;
	.GLOBL SKIKO1,SFREK1,SNEWG1,SEOGA1
	.GLOBL UPLSCOR,UPRSCOR
	.GLOBL CLRKIK,MOFFSI,NEWCHR,ALWAYS
	.GLOBL PENOFF,PAUSE,PAUSPR,QCHKS2,USECON,UMINUT
;
; GLOBL REFERENCES
;
	.GLOBL LANGOP,FRAME,STPCLK,OPTION,KICKER,TEAM,STATE,CHKSM2
	.GLOBL TENYDS,WHISTL,THUD,CHEER,CROWD,FLAGS,TIMER1,J,K,SETUPC
	.GLOBL $CNCT,ATRACT,NXTSTA,DSTAWA,BEEP,AROFLG,AROSTA
	.GLOBL TIMER2,PLAOPT,OPARAM,AHEAD,$COINA,$LMBIT
	.GLOBL HPOSH,BHPOSL,VPOS,BVPOSL,HGOAL,VGOAL,LSTSET,ALARM,DSPEED
	.GLOBL POSDIS,STRCLK,TEMOFF,OBJECT
;
;BASE PAGE RAM USED ONLY BY THIS MODULE
;
	.BSECT BPALPH
OMESL:	.BLKB 3			;(0)=LAST LEFT MSG; (2)=LAST RIGHT
WPLAYR	=OMESL+1
TEMPL:	.BLKB 1
TEMPH:	.BLKB 1
IMTBL:	.BLKB 2			;POINTER TO CORRECT LANGUAGE TABLE
LNGIND:	.BLKB 1			;LANGUAGE INDEX
STCOIN:	.BLKB 1			;IF +, # OF COINS-1 UNTIL GAME WILL START
COIMIN:	.BLKB 1			;MIN # OF COINS TO START GAME
LTWEET:	.BLKB 1			;FOR MULTIPLE WHISTLE LENGTH OF EACH BURST
LGAP:	.BLKB 1			;FOR MULTIPLE WHISTLE, TIME BETWEEN BURTS
WHICNT:	.BLKB 1			;WHISTLE COUNTER (MULTIPLE WHISTLES)
SILWHI:	.BLKB 1			;WHISTLE SILENCE FOR MULTIPLE WHISTLES
SECOND:	.BLKB 1
MINUTE:	.BLKB 1
TIMER3:	.BLKB 1
ENDCHR:	.BLKB 1
SCORE:	.BLKB 4			;SCORE FOR LEFT & RIGHT PLAYERS(+0AND+2)
;
;PLAYFIELD ALPHANUMERICS FOR SCORING, TIMING, AND MESSAGES TO PLAYERS
;EACH SIDE HAS 4 ROWS OF 32 CHARS, OF WHICH 3 ROWS OF 28
;CHARS ARE ACTUALLY USED.
;
ALPHL	=0380			;LEFT SIDE (TO 3FF)
ALPHR	=0200			;RIGHT SIDE (TO 25F)
;
;MISC EQUATES
;
MTIME	=0			;"TIME"
MSCORE	=1
M234	=2			;"2,3 OR 4 CAN PLAY"
MATARI	=03			;"ATARI SOCCER"
M.ECAT	=4			;"EACH COIN..."
MGAMOV	=5			;"GAME OVER"
M.GAO	=6			;"GAME ALMOST OVER"
M2COIN	=7			;"2 COIN MINIMUM"
MGOAL	=8			;GOAL MESSAGE #
MKIKR	=09			;"KICKER"
MDEFNS	=0A			;"DEFENSE"
MOFSID	=0B			;"OFFSIDES"
MFREEK	=0C			;"FREE KICK"
ERASE	=80			;ERASE MESSAGE FLAG
TWOCOM	=40			;2 COIN MINIMUM FLAG BIT (OPTION)
	.PAGE
	.CSECT
	.SBTTL MONEY GRABBER
USECON:	.BYTE 0,20,40,0,30,0,30,0
UMINUT:	.BYTE 1,1,1,2,2,3,3,4
ALWAYS:
	LDA $CNCT
	IFNE			;ANY MONEY?
	  DEC $CNCT		;YES. TAKE $$
	  LDA I,0
	  STA BEEP		;CLEAR BEEP
	  LDA I,M.GAO!ERASE	;CLEAR WARN MSGS.
	  JSR WRITEB
	  LDA ATRACT
	  IFEQ			;IN ATTRACT?
	    INC STCOIN		;YES. ENOUGH COINS TO START GAME?
	    LDA STCOIN
	    CMP COIMIN
	    IFCS
	      DEC ATRACT	;YES. PUT IN GAME MODE
	      LDX I,CNEWGA	;SET UP FOR NEW GAME
	      JSR PAUSPR
	      LDA I,TWO4OP		;CLEAR RULES, SET 2 PLAYER
	      STA PLAOPT
	    THEN
	  THEN
	  LDA SETUPC		;IF IN WINDOW AFTER GAME IS OVER
	  CMP I,CEOGA		;BUT BEFORE ATTRACT
	  IFEQ
	    LDX I,CKIKOF	;THEN CONTINUE GAME
	    JSR PAUSPR
	  THEN
	.SBTTL ADD PLAY TIME FOR 1 COIN

;INPUT:		OPTION BYTE D2-D0:	000=1:00 PER COIN
;					001 1:20
;					010 1:40
;					011 2:00
;					100 2:30
;					101 3:00
;					110 3:30
;					111 4:00
;		MINUTE,SECOND=CURRENT PLAY TIME
;OUTPUT:	MINUTE,SECOND UPDATED
;
	  SED			;DECIMAL MODE
	  LDA OPTION		;GET TIME PER COIN CODE
	  AND I,7
	  TAY
	  LDA AY,USECON		;UPDATE SECONDS
	  CLC
	  ADC SECOND
	  CMP I,60
	  IFCS
	    SBC I,60
	  THEN
	  STA SECOND
	  LDA AY,UMINUT		;UPDATE MINUTES
	  ADC MINUTE
	  IFCS			;OVER 99?
	    LDA I,59		;YES. MAX PLAY TIME AT 99:59
	    STA SECOND
	    LDA I,99
	  THEN
	  STA MINUTE
	  CLD			;BACK TO HEX MODE
	  JSR DTIME		;SHOW TIME
	THEN
	.PAGE
	.SBTTL ATTRACT MESSAGES
	LDA ATRACT		;IF ATTRACT MODE
	IFEQ
	  LDA TIMER3		;ATTRACT MODE
	  ROL
	  ROL
	  ROL
	  ROL
	  AND I,3		;USE 2 BITS IN MID OF MSG TIMER AS
	  TAX			;ATTRACT MSG # INDEX
	  LDY I,1		;NO COINS YET. SAY 1 COIN MINIMUM
	  LDA OPTION
	  AND I,TWOCOM
	  IFNE		;2 COIN MINIMUM?
	    INY		;YES. SET COUNTER FOR 2
	    INX		;2 COIN MIN. MESSAGE
	    LDA STCOIN	;IF 1 COIN IN ALREADY
	    IFNE
	      INX		;FLASH 2 COIN MESSAGES
	      INX
	      INX
	    THEN
	  THEN
	  STY COIMIN
	  LDA TIMER3
	  AND I,1F
	  IFEQ			;DON'T WRITE OUT MESSAGE UNLESS IT'S NEW
	    LDA AX,ATMTAB
	    JSR WRITEB
	  THEN
	  INC TIMER3
	  LDX ALARM		;SLAM ALARM ALRADY SET
	  IFEQ
	  LDY I,0
	  STY PLAOPT		;ALL PLAYERS IN ATTRACT
	  LDA $COINA		;NO
	  AND I,$LMBIT
	  IFEQ			;SLAM?
	    LDX I,10		;YES 4 SECOND ANNOYING BEEP
	    INY
	  THEN
	  STX ALARM
	  STY BEEP
	  THEN
	THEN
	.PAGE
	.SBTTL FAN SOUNDS
	LDA CHEER+1		;GET PRESENT CHEER
	CMP CHEER		;COMPARE TO DESIRED
	BCS 12$			;IF PRESENT GREATER, DEC
	ADC I,20		;ELSE RUN QUICKLY UP
	BCC 18$			;BRANCH NO WRAP
	LDA I,0FF		;ELSE SET MAX AND FALL THROUGH TO RESET
12$:	LDY I,0
	STY CHEER		;RESET DESIRED
	SBC I,3			;DECREASE SLOWLY
	BCS 18$			;BRANCH NO WRAP
	LDA I,0			;ELSE SET MIN
18$:	STA CHEER+1		;SAVE PRESENT
	LSR
	LSR
	LSR
	LSR
	IFEQ
	LDA I,1			;KEEP SOME SOUND
	THEN
	STA CROWD
	LDA WHICNT		;MULTIPLE WHISTLES?
	IFNE
	  LDA WHISTL		;YES. WHISTLE OFF?
	  IFEQ
	    DEC SILWHI		;YES. DECREMENT SILENCE
	    LDA SILWHI		;SILENCE DONE?
	    IFMI
	      LDA LTWEET	;YES. RESTART WHISTLE
	      STA WHISTL
	      LDA LGAP
	      STA SILWHI
	      DEC WHICNT
	    THEN
	  THEN
	THEN
	.PAGE
	.SBTTL ARROW PROCESSING
	LDX AROFLG		;# OF ARROWS TO BE DISPLAY
	IFNE
	  LDA PLAOPT
	  LDX I,2
	  AND I,TWO4OP
	  IFEQ
	    LDX I,4
	  THEN
	THEN
	CPX AROSTA		;# CURRENTLY DISPLAYED
	IFNE			;SAME?
	  STX AROSTA		;DIFFERENT
	  IFCC			;NEW < OLD?
	    JSR CLRARO		;YES. CLEAR ARROW
	  THEN
	  LDA AROSTA
	  IFNE			;DISPLAY ARROWS?
	    JSR ONAROW
	  THEN
	THEN
	.PAGE
				;SCORE MAY NEED BLINKING. FALL INTO IT.
	.SBTTL DISPLAY SCORES
	LDY LNGIND		;LEFT SIDE:
	LDX AY,LSCOAD		;	SCORE DISPLAY LOCATION
	LDY I,LEFT		;	LEFT SIDE INDEX
	JSR DSNUM		;	DISPLAY SCORE
	LDY LNGIND		;RIGHT SIDE:
	LDX AY,RSCOAD		;	SCORE DISPLAY LOC
	LDY I,RIGHT		;	RIGHT SIDE INDEX
	JSR DSNUM
	.PAGE
	.SBTTL TIMER
;***********************
;*
;*TIMER
;*
;*************************
;
;DESCRIPTION:	CALLED ONCE PER FRAME, MAINTAINS TIMER
;		IN MINUTE, SECOND, & FRAME. IF STPCLK NOT 0, ONLY FRAME
;		RUN, IF STPCLK=0, ALL COUNTERS RUN.  RETURNS WITH
;		CARRY SET ONCE PER SECOND. STICKS AT 0:00
;		Z SET IF TIMER=0:00
;		(DECREMENTS STPCLK IF NON-ZERO)
;
;REGISTERS:
;	IN:	DON'T CARE
;	OUT:	ACC=MINUTE!SECOND; X,Y NOT CHANGED
;		Z SET PER ACC. C SET ONCE PER SECOND. D CLEARED
;
;
;STACK USE:	2 BYTES FOR RET. ADDR.
;
;
;
;BASE PAGE USE:	MODIFY: FRAME,MINUTE, SECOND, STPCLK,TIMER1,TIMER2
;		READ:	
;
	CLC			;CLEAR "ONCE PER SECOND" FLAG
	LDA TIMER1		;DECREMENT THE TIMER TO 0
	IFNE
	  DEC TIMER1
	THEN
	LDA TIMER2
	IFNE
	  DEC TIMER2
	THEN
;	CLC			;SET BORROW
	LDA STPCLK		;STOP CLOCK?
	IFNE
	DEC STPCLK		;NO. RUN STOPPER
	SEC			;CLR BORROW
	THEN
	LDA ATRACT		;ATTRACT MODE?
	IFEQ
	  SEC			;YES. STOP CLOCK
	THEN
	LDA MINUTE
	DEC FRAME		;COUNT FRAMES
	IFMI
	LDA I,19.		;RESET FOR 20 FRAME COUNT
	STA FRAME
	LDA SECOND
	SED
	SBC I,0			;SUBTRACT 1 OR 0
	IFCC			;BRANCH NO BORROW
	LDA I,59		;IF BORROW SET 59 SECONDS
	THEN
	STA SECOND
	LDA MINUTE
	SBC I,0
	CLD
	IFCC			;BRANCH NO BORROW
;IF WRAP, STICK AT 0
	LDA I,0
	STA SECOND
	SEC			;ONCE PER SECOND FLAG
	THEN
	THEN
	STA MINUTE
	ORA SECOND
	.PAGE
	.SBTTL 30 SECOND WARNING
	IFCS			;TIME CHANGE?
	JSR DTIME		;YES. DISPLAY NEW TIME
;COME HERE ONCE/SEC.
	LDA ATRACT			;ONLY DO THIS WHEN IN GAME MODE
	IFNE
	LDA TIMER2
	IFNE
	LDA SCORE		;IF NO SCORE YET, KEEP DRONES OFF
	ORA SCORE+2
	IFEQ
	  LDA I,07F		;NO SCORE. NO DRONE MOVEMENT
	  STA TIMER2
	THEN
	THEN
	LDA STATE
	CMP I,S.PLAY
	IFEQ
	LDA MINUTE
	IFEQ
	  LDA SECOND
	  IFEQ			;ANY TIME LEFT?
	    LDX I,CEOGA		;NO. REQUEST END GAME
	    JSR PAUSPR
	    LDA I,3
	    STA WHICNT		;3 WHISTLES
	    LDA I,20
	    STA LTWEET
	    LDA I,06
	    STA LGAP
	  ELSE
	    CMP I,31		;YES, > 30 SECONDS?
	    IFCC
	      LDX I,0		;NO. GIVE WARNING BEEP AT
	      CMP I,30
	      IFEQ
	        STX ENDCHR	;(INITIALIZE END CHEER)
	        LDX I,1		;30 AND
	      THEN
	      CMP I,15
	      IFEQ
	        LDX I,1		;15 SECONDS
	      THEN
	      STX BEEP
	      IFCC		;FLASH ON & OFF FOR 1 SECOND INTERVALS
	        LSR
	        LDA I,M.ECAT	;"EACH COIN..." IF < 15 SEC'S
	      ELSE
	        LSR
	        LDA I,M.GAO	;"GAME ALMOST OVER" IF > 15 SEC'S
	      THEN
	      IFCS
	        ORA I,ERASE	;FLASH IT
	      THEN
	      JSR WRITEB
	      LDA ENDCHR	;PULSE CROWD LOUDER & LOUDER
	      CLC
	      ADC I,8
	      STA ENDCHR
	      JSR NEWCHR
	    THEN
	  THEN
	  THEN
	  THEN
	THEN
	LSR ALARM		;DECREASE ALARM TO 0
	THEN			;END OF "ALWAYS" ROUTINE
	RTS
ATMTAB:	.BYTE MGAMOV,MATARI,M234,M.ECAT,M2COIN
	.BYTE M2COIN!ERASE,M2COIN,M2COIN!ERASE
	.PAGE
	.SBTTL PAUSE STATE
;NO MOTION ON FIELD
PAUSE:	JSR UPOSIT		;KEEP DISPLAY UPDATED
	JSR POSDIS
	LDY STPCLK
	IFEQ			;PAUSE FINISHED?
	  LDA NXTSTA		;YES. GO TO NEXT STATE
	  STA STATE
	  CMP I,S.PLAY		;WHISTLE WHEN GOING TO PLAY STATE
	  IFEQ
	    LDA I,30
	    STA WHISTL
	    LDA I,8*PSECNS	;KEEP DRONES STILL FOR AWHILE
	    STA TIMER2
	    LDA STRCLK		;KEEP CLOCK STOPPED FOR 8 SECONDS
	    STA STPCLK		;IF 1ST KICKOFF, ELSE START IT RIGHT AWAY
	  THEN
	THEN
	RTS
	.PAGE
	.SBTTL PREP FOR PAUSE STATE
;INPUT:	X=NEXT SETUP SITUATION

PAUSPR:
	STX SETUPC		;NEXT SETUP TYPE
	TXA
	LSR
	TAX
	LDA AX,PATIME		;GET FRAMES TO PAUSE
	STA STPCLK		;PAUSE TIME
	LDA I,S.PAUS		;REQUEST PAUSE STATE
	STA STATE
	LDA I,S.SET		;REQUEST SETUP STATE
	STA NXTSTA
	LDA I,0
	STA BEEP
	JSR INITIL		;INITIALIZE MOVING OBJECT VARIABLES
	LDX I,LOBLOOP		;INITIALIZE FLAGS
	BEGIN
	  LDA AX,FLAGS
	  AND I,DRONE!FINACT	;SAVE DRONE & ACTIVE STATUS
	  ORA I,ATGOAL		;FORCE "AT GOAL"
	  STA AX,FLAGS
	  DEX
	  DEX
	MIEND
	RTS
PATIME:			;FRAMES TO PAUSE BEFORE GOING INTO SETUP STATE
	.BYTE 2*PSECNS
	.BYTE 2*PSECNS
	.BYTE 1*PSECNS
	.BYTE 4*PSECNS
	.PAGE
	.PAGE
	.SBTTL FAN SOUNDS
NEWCHR:				;UPDATE CHEER ONLY IF NEW IS LOUDER
	CMP CHEER
	IFCS
	  STA CHEER
	THEN
	RTS
	.PAGE
	.SBTTL END OF GAME PROCESSING
SEOGA1:	LDA I,0
	STA ATRACT		;SET ATTRACT MODE
	STA TIMER3		;INITIALIZE ATTRACT MODE MESSAGE TIMER
	.SBTTL SET UP FOR NEW GAME
SNEWG1:	JSR INITIL		;INITIALIZE MOVING OBJECT VARIABLES
	LDA LANGOP		;LANGUAGE SETUP: OPTION BYTES D3-D2
	LSR			;	0=ENGLISH,1=GERMAN,2=FRENCH,3=SPANISH
	AND I,06		;OUTPUT: IMTBL=LOC OF MAG PTR TABLE
	TAX			;	LNGIND=INDEX FOR CHOSEN LANGUAGE
	STX LNGIND
	LDA AX,LANGTB
	STA IMTBL
	LDA AX,LANGTB+1
	STA IMTBL+1
	LDX I,LOBLOOP
	BEGIN
	  LDA I,DRONE
	  LDY ATRACT
	  IFMI			;GAME MODE OR ATTRACT? (IN ATTRACT ALL ARE DRONES)
	    AND AX,OPARAM	;GAME: SET PLAYER TO PREDETERMINED STATUS
	  THEN
	  STA AX,FLAGS
	  DEX
	  DEX
	MIEND
	LDA Z,FRAME		;SET UP INITIAL KICKER
	AND I,2			;RANDOMLY
	STA Z,KICKER
	LDA I,-1		;NEITHER TEAM AHEAD
	STA AHEAD
	LDA I,8.*PSECNS		;STOP CLOCK FOR 8 SECONDS OR UNTIL KICKOFF
	STA STRCLK
	LDA I,0
	STA CHEER
	STA WHISTL		;CLEAR SOUNDS
	STA THUD
	STA STCOIN
	STA DSPEED		;SLOW AUTO PLAYER SPEEDS
	STA DSPEED+2
	LDX ATRACT
	IFMI			;CLEAR SCORE ONLY WHEN -> GAME
	  STA Z,SCORE
	  STA Z,SCORE+2
	THEN
	JSR CAN			;CLEAN SCOREBOARD
	JSR RSF			;RESET SCROLLFIELD
	LDA I,MSCORE		;"TIME SCORE"
	JSR WRITEB
	LDA I,MTIME
	JSR WRITEB
	JSR DTIME
	.PAGE
	.SBTTL PRODUCE KICKOFF MESSAGES
SKIKO1:
	LDA I,CKIKOF		;SET KICK 2X RULE
	STA LSTSET
	LDA Z,KICKER
	AND I,02
	TAX
	LDA I,MKIKR		;"KICKERS" MESSAGE
	JSR REPLAC
	LDA Z,KICKER
	AND I,02
	EOR I,02
	STA TENYDS		;SET 10 YARDS RULE FOR DEFENSE
	TAX
	LDA I,47.		;SET 10 YD DISTANCE
	STA DSTAWA
	LDA I,MDEFNS		;"DEFENSE" MESSAGE
	JSR REPLAC
	JMP KIKPOS		;MOVE PLAYERS TO KICKOFF POS.

	.SBTTL CLEAN UP AFTER KICKOFF
CLRKIK:	LDA Z,TENYDS		;DON'T DO THIS IF NOT A KICKOFF
	IFPL
	LDA I,0FF		;CLEAR KICKOFF FLAG
	STA Z,KICKER
	STA Z,TENYDS
	LDA I,0
	STA STPCLK		;START CLOCK
	STA STRCLK		;NO MORE 8 SECOND DELAYS
	STA TIMER2		;SET DRONES LOOSE
	STA AROFLG		;CLEAR ARROWS
	LDA I,MDEFNS!ERASE	;CLEAR KICK OFF MESSAGE
	JSR WRITEB
	THEN
	RTS
	.PAGE
	.SBTTL PROCESS SCORING
UPLSCOR:LDX I,LEFT		;LEFT PLAYER SCORED
	BPL GSCORE
UPRSCOR:LDX I,RIGHT		;RIGHT PLAYER SCORED
GSCORE:	TXA
	EOR I,2			;SET UP KICKER FOR KICKOFF
	TAY
	STA Z,KICKER
	LDA I,0			;SET SLOW SPEED
	STA DSPEED
	STA DSPEED+2
	STA OBJECT		;ABOUT UPOSIT
	LDA I,-1
	STA AHEAD		;& TIE GAME
	LDA ATRACT		;NO SCORE IN ATTRACT
	IFNE
	  SED			;DECIMAL SCORE
	  CLC
	  LDA ZX,SCORE		;INCREMENT SCORER'S SCORE
	  ADC I,1
	  STA ZX,SCORE
	  CLD			;BACK TO HEX
	  CMP AY,SCORE		;COMPARE SCORES
	  IFNE
	    LDA I,10		;FAST SPEED
    	    IFCC
    	      STY AHEAD		;Y AHEAD
    	      STA AX,DSPEED	;MAKE X FAST
    	    ELSE
    	      STX AHEAD		;X AHEAD
    	      STA AY,DSPEED	;MAKE Y FAST
    	    THEN
	    LDY AHEAD
	    LDA AY,SCORE
	    CMP I,4		;LEADING PLAYER SCORED < 4
	    IFCC		;PTS SO FAR?
	      LDA I,0		;YES. SLOW DOWN THE
	      TYA
	      EOR I,02
	      TAY
	      STA AY,DSPEED	;LOSER'S DEFENSE SO IT'S
	    THEN		;=WINNER'S DEFENSE.
	  ELSE			;NEITHER TEAM AHEAD
    	    CMP I,5		;IF SCORES ARE HIGH ENOUGH
    	    IFCS
    	      LDA I,10		;THEN SPEED UP ALL AUTO PLAYERS
    	      STA DSPEED
    	      STA DSPEED+2
    	    THEN
    	  THEN
	THEN
	LDA I,MGOAL		;DISPLAY 'GOAL' ON SCORER'S SIDE
	JSR REPLAC
	LDA I,240.		;CROWD GOES WILD
	JSR NEWCHR
	LDA I,30		;SHORT WHISTLE
	STA WHISTL
	LDX I,CKIKOF		;REQUEST KICKOFF IN SETUP STATE
	JMP PAUSPR		;PREPARE TO PAUSE
;NOTE:	DEFENSE (DRONE & GOALIE) SPEEDS:  (0=FAST, 0=SLOW
;	IF HI SCORE < 4 SET L & R SIDES SLOW
;	IF SCORES TIED AND >=5, SET L & R SIDES FAST
;	IF HI SCORE >=4 AND NO TIE, SET LOSER SIDE FAST AND LEADER SIDE SLOW
	.PAGE
	.SBTTL INITIAL FREE KICK PROCESSING (OFFSIDES)
PENOFF:	LDX I,CFREKI		;REQUEST FREE KICK SETUP IN SELECT STATE
	JSR PAUSPR		;PREPARE FOR PAUSE
	LDA I,30		;WHISTLE
	STA WHISTL
	LDA AY,TEAM		;KEEP OFFENDERS 10 YARDS AWAY FROM BALL
	STA TENYDS
	EOR I,02
	TAX
	LDA I,47.		;SET 10 YD DISTANCE
	STA DSTAWA
	LDA I,MFREEK		;DISPLAY "FREE KICK"
	JMP REPLAC
;
;
	.PAGE
	.SBTTL 10 YARD RULE
HTENY	=6.
VTENY	=48.
SFREK1:
	LDX I,LOBLOOP		;MOVE EACH PLAYER UNDER 10 YARD RULE
	BEGIN			;11 YARDS AWAY FROM THE BALL AND
	  LDA AX,FLAGS
	  ORA I,ATGOAL
	  STA AX,FLAGS
	  LDA AX,TEAM		;AWAY FROM THE EDGE OF THE FIELD
	  CMP TENYDS		;UNDER 10 YD. RULE?
	  IFEQ
	    LDA ZX,VPOS
	    STA AX,VGOAL
	    LDA ZX,HPOSH	;YES. UNDER 10 YARD RULE, SET GOAL
	    STA AX,HGOAL+1
	    SEC
	    SBC BHPOSL+1
	    ABSACC
	    CMP I,HTENY
	    IFCC
	     LDA BHPOSL+1
	     CMP I,HCENTR
	     IFCC
	       ADC I,HTENY+1
	     ELSE
	       SBC I,HTENY+1
	     THEN
	     STA AX,HGOAL+1
	     LDA AX,FLAGS
	     AND I,NATGOAL
	     STA AX,FLAGS
	    ELSE
	      LDA ZX,VPOS
	      CMP BVPOSL+1
	      IFCS
	        SBC BVPOSL+1
	      ELSE
	        LDA BVPOSL+1
	        SEC
	        SBC ZX,VPOS
	      THEN
	      CMP I,VTENY
	      IFCC
	     LDA BVPOSL+1
	     CMP I,VCENTR
	     IFCC
	       ADC I,VTENY+8
	     ELSE
	       SBC I,VTENY+8
	     THEN
	     STA AX,VGOAL
	     LDA AX,FLAGS
	     AND I,NATGOAL
	     STA AX,FLAGS
	      THEN
	    THEN
	  THEN
	  DEX
	  DEX
	MIEND
	RTS
	.PAGE
	.SBTTL OFFSIDES MESSAGE
MOFFSI:
	LDX I,2			;DO LEFT(0) & RIGHT(2) TEAMS
	BEGIN
	  LDA I,MOFSID!ERASE	;DEFAULT:NOT OFFSIDES
	  LDY AX,TEMOFF
	  IFNE			;OFFSIDES?
	    EOR I,ERASE		;YES. WRITE OFFSIDES
	  THEN
	  JSR REPLAC
	  DEX
	  DEX			;NOW DO OTHER TEAM
	MIEND
	RTS
	.PAGE
	.PAGE
	.SBTTL CLEAR ALPHANUMERICS
CAN:	LDX I,128.
	LDA I,0
	BEGIN
	  STA AX,ALPHR
	  STA AX,ALPHL
	  DEX
	MIEND
	RTS
;DISPLAY TIME ON BOTH ENDS
DTIME:	LDY LNGIND		;POSITION FOR TIME
	LDX AY,LTIMAD
	JSR ONETIM		;LEFT SIDE TIME
	LDY LNGIND
	LDX AY,RTIMAD
ONETIM:	LDA MINUTE
	JSR ASCAX
	CMP I,'0
	BNE 2$
	LDA I,0
2$:	JSR WRTAN
	TYA
	JSR WRTAN
	LDA I,':
	JSR WRTAN
	LDA SECOND
	JSR ASCAX
	JSR WRTAN
	TYA
	JMP WRTAN		;USE ITS RTS
	.SBTTL ASCII CONVERSION
;INPUT:	ACC=2 HEX DIGITS TO CONVERT
;OUTPUT:ACC=HIGH NIBBLE, 4=LOW IN ASCII
;	X IS PRESERVED
ASCAX:	PHA
	AND I,0F		;ISOLATE LOW NYBBLE
	CMP I,10.		;A-F?
	IFCS
	  ADC I,6.		;ELSE ADD 7 (6+CARRY)
	THEN
	ADC I,'0		;MAKE ASCII
	TAY			;Y:=LOW NYBBLE
	PLA
	LSR
	LSR
	LSR
	LSR
	CMP I,10.
	IFCS
	  ADC I,6
	THEN
	ADC I,'0
	RTS
	.PAGE
	.SBTTL DISPLAY A SCORE
DSNUM:				;GENERAL DISPLAY ROUTINE
	LDA AY,SCORE		;GET SCORE
	CPY AHEAD		;THIS SIDE AHEAD?
	IFEQ
	  LDY FRAME		;YES. BLINK TIME (FRAMES 16-20)?
	  CPY I,15.
	  IFCS
	    LDA I,0		;YES. BLINK SCORE OFF
	    JSR WRTAN
	    LDA I,0
	    JMP WRTAN
	  THEN
	THEN
	JSR ASCAX		;NO BLINK. CONVERT SCORE TO ASCII
	CMP I,'0
	IFEQ			;SUPPRESS LEADING ZERO
	  LDA I,0
	THEN
	JSR WRTAN		;DISPLAY TENS DIGIT
	TYA
	JMP WRTAN		;DISPLAY ONES DIGIT
	.PAGE
	.SBTTL MESSAGES
WRITEB: LDX I,2			;POINT TO RIGHT PLAYER
	JSR REPLAC		;REPLACE HIS LAST MSG
	LDX I,0			;POINT TO LEFT
;FALL THROUGH TO DO THE SAME FOR LEFT
REPLACE:
	CMP X,OMESL		;DON'T REDO SAME MSG.
	IFEQ
	  RTS
	THEN
	STA X,OMESL
	ASL			;DETERMINE ROW# (1-3)
	TAY
	LDA NY,IMTBL
	STA J
	LSR
	LSR
	LSR
	AND I,01C
	TAY
	IFNE			;ROW 2 OR 3?
	.SBTTL CLEAR ALPHANUMERICS LINE
;IN: X=SIDE (LEFT OR RIGHT)
;    Y=LINE (1ST=0,2ND=4,3RD=8)
;OUT:ACC,Y DESTROYED; X IS PRESERVED
;
	CPX I,RIGHT
	IFEQ
	  INY
	  INY
	THEN
	LDA AY,DESTL		;SET UP POINTER TO LINE
	STA TEMPL
	LDA AY,DESTL+1
	STA TEMPH
	LDA I,0
	LDY I,29.
	BEGIN
	  STA NY,TEMPL		;LOOP TO BLANK LINE.
	  DEY
	MIEND
	THEN
	LDA X,OMESL		;GET BACK NEW MSG
;FALL THROUGH TO WRITE NEW MSG.
;*************************
;*
;*MESSAGES
;*
;***************************
;
;DESCRIPTION:	IF (ACC>=0) OUTPUT MESSAGE (ACC) ELSE
;		CLEAR MESSAGE (ACC&7F). STOPS WHEN CHAR. HAS
;		D7 SET.
;
;
;REGISTERS:
;	IN:	ACC=MESSAGE #;X=PLAYER # (0-LEFT,2-RIGHT),Y-DON'T CARE
;	OUT:	ACC,X-RESTORED, Y-> NEXT DST POSN
;		CARRY SET
;
;
;STACK USE:	2 BYTES FOR RTN ADDR.
;
;
;
;
	STX WPLAYR
	ASL			;MSG # *2,CARRY=1 IF CLEAR, 0 IF WRITE
	TAY			;POINT INTO MSG TABLE
	IFCC			;WAS THIS AN ERASE?
	  INY
      	  LDA NY,IMTBL		;NO.GET SRC PTR
	  TAY			;X<-SRC
	  LDA J		;GET DST PTR
  	  CPX I,2			;SET CARRY IF X=2 (RIGHT)
	  IFCS
	    EOR I,1F		;COMPLEMENT CHAR #
	    ADC I,9D		;ACC<-1D-DST+80
	  ELSE
	    EOR I,60		;COMPLEMENT ROW #
	  THEN
	  TAX
	  BEGIN
	    LDA NY,IMTBL	;GET MSG CHAR
	    CMP I,80		;SET C=D7
	    JSR WRTAN		;WRT CHAR, BUMP DST PTR
	    INY			;BUMP SRC PTR
	  CSEND
	THEN
	LDX WPLAYR
	LDA X,OMESL		;RESTORE MSG# TO ACC
	RTS

;INPUT:	X=CHAR POSITION (+:LEFT;-:RIGHT)
;	ACC=ASCII CHAR TODISPLAY
;OUT:	X=NEXT CHAR POSITION
WRTAN:	AND I,3F		;CLEAR REFLECT BITS
	DEX
	INX			;TST Y WITHOUT BLITZING CARRY
	BPL 1$			;IF PLUS, PUT ON LEFT
	STA AX,ALPHR-0A0	;-20 FOR POSITIONING, -80 TO
	DEX			;COMPENSATE FOR FLAG
	RTS
1$:	ORA I,REVERS		;REFLECT CHAR
	STA AX,ALPHL
	INX
	RTS
DESTL:	.WORD 3E0		;LEFT SIDE LINE 1
	.WORD 200		;RIGHT SIDE LINE 1
	.WORD 3C0		;L2
	.WORD 220		;R2
	.WORD 3A0		;L3
	.WORD 240		;R3
;
QCHKS2:	.BYTE CHKSM2		;2ND CHECKSUM (2600)
	.PAGE
	.SBTTL ENGLISH LITERALS
	.MACRO EMAC ROW,COL,LOC
	.BYTE <ROW>*20+COL,LOC-EMTBL
	.ENDM
EMTBL:	EMAC 0,25.,EMTIME
	EMAC 0,1,EMSCOR
	EMAC 2,7.,EM234
	EMAC 2,9.,EMATAR
	EMAC 2,5.,EMEACH
	EMAC 2,10.,EMOVER
	EMAC 2,7.,EMALMO
	EMAC 2,8.,EM2COI
	EMAC 1,13.,EMGOAL
	EMAC 1,11.,EMKICK
	EMAC 1,11.,EMDEFE
	EMAC 1,11.,EMOFFS
	EMAC 1,10.,EMFREE
EMTIME:	.ASCIN	/TIME/
EMSCOR:	.ASCIN	/SCORE/
EM234:	.ASCIN	/2 OR 4 CAN PLAY/
EMATAR:	.ASCIN	/ATARI SOCCER/
EMEACH:	.ASCIN	/EACH COIN ADDS TIME/
EMOVER:	.ASCIN	/GAME OVER/
EMALMO:	.ASCIN	/GAME ALMOST OVER/
EMGOAL:	.ASCIN	/GOAL/
EMKICK:	.ASCIN	/KICKERS/
EMDEFE:	.ASCIN	/DEFENSE/
EMOFFS:	.ASCIN	/OFFSIDES/
EMFREE:	.ASCIN	/FREE KICK/
EM2COI:	.ASCIN /2 COIN MINIMUM/
LANGTB:	.WORD EMTBL		;ENGLISH
	.WORD GMTBL		;GERMAN
	.WORD FMTBL		;FRENCH
	.WORD SMTBL		;SPANISH
	.MACRO ROWILR COL	;CONVERT COLUMNS # TO DISPL
	.BYTE 60+COL		;FOR A MESSAGE IN ROW 1
	.BYTE 0BD-COL		;ON LEFT(BYTE 1) AND RIGHT
	.ENDM			;(BYTE 2) SIDES
SCOTAB:	ROWILR 7.		;ENGLISH
	ROWILR 11.		;GERMAN
	ROWILR 7.		;FRENCH
	ROWILR 9.		;SPANICH
TIMTAB:	ROWILR 19.		;ENGLISH
	ROWILR 15.		;GERMAN
	ROWILR 11.		;FRENCH
	ROWILR 17.		;SPANISH
LTIMAD	=TIMTAB			;LEFT SIDE TIME DISPLAY LOC
RTIMAD	=TIMTAB+1		;RIGHT SIDE
LSCOAD	=SCOTAB			;LEFT SIDE SCORE DISPLAY LOC
RSCOAD	=SCOTAB+1		;RIGHT SIDE
	.PAGE
	.SBTTL GERMAN LITERALS
	.MACRO GMAC,ROW,COL,LOC
	.BYTE <ROW>*20+COL,LOC-GMTBL
	.ENDM
GMTBL:	GMAC 0,21.,GMTIME
	GMAC 0,1,GMSCOR
	GMAC 2,3,GM234
	GMAC 2,8,GMATAR
	GMAC 2,2,GMEACH
	GMAC 2,10.,GMOVER
	GMAC 2,6,GMALMO
	GMAC 2,5,GM2COI
	GMAC 1,13.,GMGOAL
	GMAC 1,11.,GMKICK
	GMAC 1,9.,GMDEFE
	GMAC 1,11.,GMOFFS
	GMAC 1,10.,GMFREE
GMTIME:	.ASCIN	/RESTZEIT/
GMSCOR:	.ASCIN	/PUNKTZAHL/
GM234:	.ASCIN	/2 ODER 4 KOENNEN SPIELEN/
GMATAR:	.ASCIN	/ATARI FUSSBALL/
GMEACH:	.ASCIN	/JEDE MUENZE GIBT MEHR ZEIT/
GMOVER:	.ASCIN	/SPIELENDE/
GMALMO:	.ASCIN	/KURZ VOR SPIELENDE/
GMGOAL:	.ASCIN	/TOR/
GMKICK:	.ASCIN	/STUERMER/
GMDEFE:	.ASCIN	/VERTEIDIGER/
GMOFFS:	.ASCIN	/ABSEITS/
GMFREE:	.ASCIN	/FREISTOSS/
GM2COI:	.ASCIN /MINDESTENS 2 MUENZEN/
	.PAGE
	.SBTTL FRENCH LITERALS
	.MACRO FMAC ROW,COL,LOC
	.BYTE <ROW>*20+COL,LOC-FMTBL
	.ENDM
FMTBL:	FMAC 0,17.,FMTIME
	FMAC 0,1,FMSCOR
	FMAC 2,8,FM234
	FMAC 2,8,FMATAR
	FMAC 2,4,FMEACH
	FMAC 2,8,FMOVER
	FMAC 2,2,FMALMO
	FMAC 2,8,FM2COI
	FMAC 1,13.,FMGOAL
	FMAC 1,11.,FMKICK
	FMAC 1,11.,FMDEFE
	FMAC 1,11.,FMOFFS
	FMAC 1,10.,FMFREE
FMTIME:	.ASCIN	/DUREE DE JEU/
FMSCOR:	.ASCIN	/SCORE/
FM234:	.ASCIN	/2 AU 4 JOUERS/
FMATAR:	.ASCIN	/ATARI FOOTBALL/
FMEACH:	.ASCIN	/CHAQUE PIECE ADD TEMPS/
FMOVER:	.ASCIN	/FIN DE PARTIE/
FMALMO:	.ASCIN	/LE JEU EST PRESQUE TERMINE/
FMGOAL:	.ASCIN	/BUT/
FMKICK:	.ASCIN	/JOUEURS/
FMDEFE:	.ASCIN	/DEFENSE/
FMOFFS:	.ASCIN	/HORS JEU/
FMFREE:	.ASCIN	/COUP FRANC/
FM2COI:	.ASCIN /2 PIECE MINIMUM/
	.PAGE
	.SBTTL SPANISH LITERALS
	.MACRO SMAC ROW,COL,LOC
	.BYTE <ROW>*20+COL,LOC-SMTBL
	.ENDM
SMTBL:	SMAC 0,23.,SMTIME
	SMAC 0,1,SMSCOR
	SMAC 2,2,SM234
	SMAC 2,9,SMATAR
	SMAC 2,3,SMEACH
	SMAC 2,7,SMOVER
	SMAC 2,3,SMALMO
	SMAC 2,5,SM2COI
	SMAC 1,13.,SMGOAL
	SMAC 1,10.,SMKICK
	SMAC 1,11.,SMDEFE
	SMAC 1,11.,SMOFFS
	SMAC 1,10.,SMFREE
SMTIME:	.ASCIN	/TIEMPO/
SMSCOR:	.ASCIN	/PUNTAJE/
SM234:	.ASCIN	/PARA 2 OR 4 PARTICIPANTES/
SMATAR:	.ASCIN	/FUTBOL ATARI/
SMEACH:	.ASCIN	/CADA FICHA AGREGA TIEMPO/
SMOVER:	.ASCIN	/JUEGO TERMINADO/
SMALMO:	.ASCIN	/EL JUEGO CASI SE TERMINA/
SMGOAL:	.ASCIN	/GOL/
SMKICK:	.ASCIN	/PATEADORES/
SMDEFE:	.ASCIN	/DEFENSOR/
SMOFFS:	.ASCIN	/OFFSIDE/
SMFREE:	.ASCIN	/TIRO LIBRE/
SM2COI:	.ASCIN /DOS MONEDAS MINIMO/
	.END

                                                                                                                                                                                                                                                                                                                                                                                                                                                                  