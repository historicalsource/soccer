	.TITLE SCROLL
	.RADIX 16
	.SBTTL **************************
	.SBTTL *			*
	.SBTTL * ROUTINE: SCROLL	*
	.SBTTL * PROGRAMMER: DAVE T	*
	.SBTTL * FUNCTION: PROCESS 	*
	.SBTTL *	   SCROLLFIELD	*
	.SBTTL *			*
	.SBTTL **************************
	.REPT 0

DATE INITIATED:		8-FEB-79

PROJECT CHARGE NUMBER:	20303

DISK NUMBER:		11 (BACKUP: B28)

HARDWARE REQUIREMENTS:	DISPLAY 30X30 MATRIX OF STAMPS, GIVEN A 32X32
			MATRIX AND THE DOT POSITION (COLUMN) IN WHICH TO
			START.

MEMORY REQUIREMENTS:	400 HEX BYTES FOR THE SCROLLFIELD FROM WHICH IT WILL
			BE DISPLAYED BY THE HARDWARE, STAMPS AND A TABLE 
			DESCRIBING THEIR LAYOUT IN RAM ANYWHERE.

INTERRUPT REQUIREMENTS:

ASSEMBLY COMMAND STRING:

LINK COMMAND STRING:

PROGRAM DESCRIPTION:	DOES ALL NECESSARY SCROLLFIELD PROCESSING:
				-RESETS SCROLLFIELD
				-TRACKS BALL
				-SCROLLS SCROLLFIELD
			GIVEN A DESCRIPTION OF 1/4 OF THE PLAYFIELD (THE
			UPPER LEFT CORNER) FROM WHICH IT CAN DEDUCE THE REST
			OF THE FIELD BY FLIPPING AND REVERSING.
	.ENDR
	.PAGE
	.INCLUDE SOCOMN
	.PAGE
	.SBTTL SYMBOL DEFINITIONS
;
;CUSTOM DEFINITIONS
;
RESCOL	=FL/2-15.		;LEFTMOST COLUMN # TO BE DISPLAYED ON RESET
SCRFLD	=800			;STORAGE AREA FOR SCROLLFIELD STAMP #'S
;
;BASE PAGE RAM (INTERNAL USE ONLY)
;
	.BSECT BCOM
ADL1:	.BLKB 1			;POINTER TO NEXT LOCATION ON WHICH TO
ADH1:	.BLKB 1			;STORE THE NORMAL STAMP
ADL2:	.BLKB 1			;POINTER TO NEXT LOCATION IN WHICH
ADH2:	.BLKB 1			;TO STORE THE FLIPPED STAMP
	.BSECT BPSCRO
STPRVR:	.BLKB 1			;YES-NO REVERSE FLAG FOR PLAYFIELD STAMP
SCRYDS:	.BLKB 1			;YARDLINE TO BE CONSTRUCTED
PICNT:	.BLKB 1			;STORAGE FOR STAMP DUPLICATION COUNTER
NPICNT:	.BLKB 1		
SCRDIR:	.BLKB 1			;SCROLL DIRECTION (D7=1: MAKE FIELD APPEAR TO MOVE RIGHT )
;
;GLOBAL REFERENCES
;
	.GLOBL BHPOSL,SFDL,SFDH,J,FRAME,PLAOPT,K,CHKSM7,LSTSET
;
;GLOBAL ENTRY POINTS DEFINED IN THIS PROGRAM
;
	.GLOBL  RSF,TRACK,CLRARO,ONAROW,CNTRFE,QCHKS7
;
;GLOBAL ENTRY POINTS DEFINED ELSEWHERE
;
	.GLOBL POSDIS

	.PAGE
	.SBTTL RESET SCROLL-FIELD
	.CSECT
RSF:	LDA I,RESCOL+32.	;LEFTMOST COLUMN # TO BE RESET
	STA SFDH
	LDA I,0
	STA SFDL
	STA SCRDIR		;D7 CLEAR
	BEGIN
	  LDA Z,SFDH		;DO THE COLUMNS LOOPS
	  JSR WCOL		;WRITE OUT COLUMN
	  DEC Z,SFDH
	  LDA Z,SFDH
	  CMP I,RESCOL
	EQEND
	INC Z,SFDH
	RTS
	.SBTTL BALL CENTERING
CNTRFE:
	LDA LSTSET
	CMP I,CKIKOF		;IS THIS A KICKOFF?
	IFEQ
	  LDA SFDH		;YES. MOVE CENTER OF FIELD TO SCREEN CENTER
	  CMP I,FL/2-16.
	  IFNE			;THERE YET?
	    ROR SCRDIR		;NO. KEEP MOVING
	    LDX I,3
	    JSR SCROLL
	  THEN
	ELSE
TRACK:	  JSR TRACK2		;YES. CENTER A BALL
	THEN
	JMP POSDIS		;POSITION MOVING OBJECTS
	.PAGE
	.SBTTL BALL-TRACKER
;THIS CODE ATTEMPTS TO KEEP THE BALL CENTERED ON SCREEN
TRACK2:				;ENTER HERE FOR GAME TIME BALL CENTERING
	LDA I,13		;REAL CENTER OF SCREEN
	LDX BHPOSL+1		;OFFSET CENTER TO THE LEFT
	CPX I,FL/2+4		;IF BALL IS ON RIGHT HALF
	IFCS			;OF FIELD AND VICE VERSA
	  LDA I,0E
	ELSE
	  CPX I,FL/2-4
	  IFCC
	    LDA I,18
	  THEN
	THEN
	CLC			;ACC=CENTER OF SCREEN YARDLINE
	ADC SFDH		;OFFSET "CENTER" OF SCREEN
	PHA
	LDA SFDL
	SEC
	SBC BHPOSL		;FIRST HALF OF D.P. COMPARE
	TAY
	PLA
	SBC BHPOSL+1		;COMPARE TO BALL POSN
	BCS 1$
	EOR I,0FF		;TAKE ABS. VAL.
	PHA
	TYA
	ADC I,20
	PLA
	ADC I,0
	CLC			;KEEP CARRY CLEAR
1$:	ROR SCRDIR		;SET D7 OF SCRDIR FOR DIRECTION
	LDX I,3
2$:	CMP AX,TMTAB-1	;!DIST!-3,6,9
	BCS SCROLL	;BRANCH IF!DIST!LARGER
	DEX
	BNE 2$
	RTS
				;---
TMTAB:	.BYTE 2,4,6
SCROCH:	.BYTE 0,20,40,80	;CHANGE IN SCROLL FIELD
QCHKS7:	.BYTE CHKSM7		;7TH CHECKSUM
	.PAGE
	.SBTTL SCROLLING
;INPUT: SCRDIR D7: 0=MOVE LEFT, 1=MOVE RIGHT
;	  SFDL & H=LEFTMOST VISIBLE YARDLINE
;OUTPUT:  SFDL & H UPDATED
SCROLL:	LDA FRAME
	LSR
	BCC 10$			;IF FRAME # IS ODD, THEN DECREMENT X
	DEX
10$:	LDA SCRDIR
	ASL			;GET DIRECTION INTO CARRY
	LDA SFDL
	STA J			;SAVE OLD VALUE
	LDY SFDH
	BCS 3$		;IF CARRY SET, SUBTRACT TO MOVE RIGHT
	CPY I,FL-30.	;ELSE CHECK FOR END OF FIELD
	IFCS
	  LDA I,0		;ALREADY THERE
	  STA SFDL		;CLEAR LSB
	  RTS			;EXIT SCROLL
	THEN
1$:	ADC AX,SCROCH
	BCC 4$
	INC SFDH
	BNE 4$		;*** ALWAYS

3$:	SBC AX,SCROCH
	BCS 4$		;CARRY IS NOT-BORROW
	DEY
	BPL 2$
	LDA I,0
	TAY
2$:	STY SFDH

4$:	STA SFDL	;IF BIT 7 OF NEW SFDL=OLD THEN
	EOR J
	BPL 6$		;NO NEED TO GENERATE NEW COLUMN
	LDA SCRDIR
	ASL
	LDA SFDH
	BCC 20$		;SCROLLING TO THE RIGHT
	LDX SFDL
	BMI 6$			;CHANGE FROM 0 TO 7 - WRONG BOUNDARY
	SBC I,0
	BCS 30$		;SCROLL TO THE LEFT IF FIELD LEFT
6$:	RTS		;NO SCREEN LEFT TO SCROLL
	
20$:	LDX SFDL
	BPL 6$			;CHANGE FROM 7 TO 0 - WRONG BOUNDARY
	ADC I,32.	;MOVE TO RIGHT OF SCREEN
30$:			;WRITE COLUMN (FALL INTO NEXT PAGE)
	.PAGE
	.SBTTL PREPARE TO BUILD COLUMN
WCOL:
	IFEQ			;CORRECT COLUMN # IF
	  LDA I,1		;ZERO
	THEN
	  CMP I,FL
	  IFCS			;OR > FIELD LENGTH
	    LDA I,FL
	  THEN
	TAY			;SAVE YARD #
				;INITIALIZE
	LDX I,0			;IF THIS IS LEFT HALF OF FIELD THEN
	CMP I,FL/2+1		;THE STAMPS MAY BE USED AS IS;
	IFCS			;OTHERWISE, THEY WILL HAVE TO BE
	  LDX I,REVERS		;REVERSED (MIRROR IMAGE).
	  EOR I,0FF		;CONVERT COLUMNS IN RIGHT HALF OF FIELD TO
	  CLC			;CORRESPONDING LEFT HALF OF FIELD NUMBERS
	  ADC I,FL+2
	THEN
	STA SCRYDS
	STX STPRVR
	DEY
	TYA
	AND I,1F		;MODULO 32. POINT TO INVISIBLE COLUMN.
	CLC			;NOW SET UP DESTINATIONS1 AND 2.
	ADC I,<SCRFLD&0FF>	;DESTINATION 2=1ST STAMP ON BOTTOM OF
	STA ADL1		;FIELD IN THIS COLUMN (FLIPPED
	LDA I,SCRFLD/100	;DESTINATION 1=1ST STAMP ON TOP OF
	ADC I,0
	STA ADH1		;FIELD IN THIS COLUMN
	CLC
	LDA A,ADL1
	ADC I,<29.*32.>&0FF	;IMAGE OF DESTINATION 1.)
	STA ADL2
	LDA A,ADH1
	ADC I,<29.*32.>/100
	STA ADH2
	LDX SCRYDS		;NOW SET UP POINTER TO DESCRIPTOR FOR THIS COLUMN
	LDY AX,COLTBL-1
	.PAGE
	.SBTTL BUILD COLUMN
	LDA I,14.
	STA Z,NPICNT
	LDX I,0
	BEGIN			;MAJOR LOOP: DOES 30 ROWS
	  LDA AY,COLHED		;GET # OF TIMES NEXT STAMP
	  INY
	  STA Z,PICNT		;IS TO BE DUPLICATED TO SAVE IT
	  LDA AY,COLHED		;GET STAMP AND REVERSE IT
	  INY
	  EOR Z,STPRVR		;IF NECESSARY
	  STA J
	  BEGIN			;MINOR LOOP: DUPS PICTURE
				;INDICATED # OF TIMES
	    LDA J		;STORE PICTURE AND FLIPPED
	    STA NX,ADL1		;VERSION OF PICTURE
	    EOR I,FLIPPR
	    STA NX,ADL2
				;
	    SEC
	    LDA ADL2		;DECREMENT HIGH POINTER TO
	    SBC I,32.		;PREVIOUS ROW.
	    STA ADL2
	    IFCC		;WAS THERE A BORROW?
	      DEC ADH2
	    THEN
	    CLC
	    LDA I,32.		;INCREMENT LOW POINTER TO
	    ADC ADL1		;NEXT ROW
	    STA ADL1
	    IFCS
	      INC ADH1
	    THEN
	    DEC Z,NPICNT
	    DEC Z,PICNT
	  EQEND			;END OF MINOR LOOP
	LDA Z,NPICNT
	MIEND			;END OF MAJOR LOOP
	RTS
	.PAGE
	.SBTTL ARROWS TO TBALL PLAYERS
CLRARO:	LDX I,0FE		;CLEAR ARROWS
	LDY I,0
	BEQ GENR
ONAROW:	LDX I,0FF		;TURN ON 2 OR 4 ARROWS
	LDY I,0
	LDA PLAOPT
	AND I,TWO4OP
	IFEQ
	  INY
	THEN
GENR:	STX J			;GENERAL CLEAR/SET ENTRANCE
	STY K
	LDX I,0FF		;CHECK OUT ALL STAMPS IN ROWS 1-9
	BEGIN			;AND ROWS 21-29 FOR ARROW PIECES
	  LDA AX,TOPROW		;IS THIS AN ARROW PIECE?
	  AND I,38
	  CMP I,38
	  IFEQ
	    LDA AX,TOPROW	;YES. TURN ON RIGHT TBALL ARROW
	    ASL
	    ROL			;PIECE AND TURN OFF LEFT TBALL
	    ADC I,0
	    AND I,1		;ARROW PIECE FOR STARTERS
	    ORA AX,TOPROW
	    AND J		;NO ARROWS: J=FE K=0
	    ORA K		;ALL ARROWS: J=FF K=1
	    STA AX,TOPROW	;RIGHT ARROWS: J=FF K=0
	  THEN			;NOW DO BOTTOM ROW
	  LDA AX,BOTROW		;IS THIS AN ARROW PIECE?
	  AND I,38
	  CMP I,38
	  IFEQ
	    LDA AX,BOTROW	;YES. TURN ON RIGHT TBALL ARROW
	    ASL
	    ROL			;PIECE AND TURN OFF LEFT TBALL
	    ADC I,0
	    AND I,1		;ARROW PIECE FOR STARTERS
	    ORA AX,BOTROW
	    AND J		;NO ARROWS: J=FE K=0
	    ORA K		;ALL ARROWS: J=FF K=1
	    STA AX,BOTROW	;RIGHT ARROWS: J=FF K=0
	  THEN			;NOW DO BOTTOM ROW
	  DEX
	EQEND
	RTS
TOPROW	=SCRFLD+01F		;ROWS 9 TO 1 USING X INDEX
BOTROW	=SCRFLD+29F		;ROWS 29 TO 21 USING X INDEX
				;56, 58, 60=BLANK PICTURES
				;57=SOLID SQUARE
				;59=SW TRIANGLE
				;61=NE TRIANGLE
	.PAGE
	.SBTTL PICTURE NUMBERS
;
;PICTURE #'S
;
SBLNK	=00			;BLANK
SRSID1	=02			;LINE DOWN RIGHT SIDE
SLSID1	=SRSID1!REVERS		;LINE DOWN LEFT SIDE
SBOT1	=03			;LINE ACROSS BOTTOM
STOP1	=SBOT1!FLIPPR		;LINE ACROSS TOP
SCORK	=06			;CORNER KICK CIRCLE
SGOAL	=04			;GOAL NET (CENTRAL PORTIONS)
STGOAL	=05			;GOAL NET (END PIECES)
SULCOR	=01			;LINES ON UPPER & LEFT SIDES
SLLCOR	=SULCOR!FLIPPR			;LINES ON LOWER & LEFT SIDES
SURCOR	=SULCOR!REVERS			;LINES ON UPPER & RIGHT SIDES
SLRCOR	=SURCOR!FLIPPR			;LINES ON LOWER & RIGHT SIDES
SULCD	=0A			;DOT IN UPPER LEFT CORNER
SLLCD	=SULCD!FLIPPR			;DOT IN LOWER LEFT CORNER
SURCD	=SULCD!REVERS			;DOT IN UPPER RIGHT CORNER
SLRCD	=SURCD!FLIPPR			;DOT IN LOWER RIGHT CORNER
SULC1	=07			;CENTER CIRCLE
SULC2	=08
SULC3	=09
SULC4	=0B
SULC5	=0C
SULC6	=0D
SULC7	=0E
SURC2	=SULC4!REVERS
SURC3	=SULC3!REVERS
SURC4	=SULC2!REVERS
SURC5	=SULC1!REVERS
SULBAR	=0F			;UPPER LEFT BAR
SLRBAR	=SULBAR!FLIPPR!REVERS
SBLOCK	=39.			;SOLID BLOCK
SULTRI	=40.			;TRIANGLE UPPER LEFT
SURTRI	=SULTRI?REVERS
SLLTRI	=SULTRI?FLIPPR
SLRTRI	=SLLTRI?REVERS
;ARROW PICTURES (MUST BE NUMBERED 56-61)
SSQBLA	=56.			;BLANK (CONV. TO SOLID SQUARE)
SOLSQU	=57.			;SOLID SQUARE
SWTBLA	=58.			;BLANK (CONV TO SW TRIANGLE)
SWTRIA	=59.			;SOLID SQUARE
NETBLA	=60.			;BLANK (CONV. TO NE TRIANGLE)
NETRIA	=61.			;SOLID SQUARE
	.PAGE
	.SBTTL SCROLLFIELD COLUMNS POINTERS
;
;COLUMN DEFINITIONS FOR SOCCER PLAYFIELD
;
	.MACRO COLOF LABEL
	.BYTE LABEL-COLHED
	.ENDM
COLTBL:	COLOF COL1			;1
	COLOF COL2			;2
	COLOF COL34			;3
	COLOF COL34			;4
	COLOF COL5			;5
	COLOF COL6T9			;6
	COLOF COL7			;7
	COLOF COL6T9			;8
	COLOF COL6T9			;9
	COLOF COL10			;10
	COLOF COL11			;11
	COLOF COL12			;12
	COLOF C1314			;13
	COLOF C1314			;14
	COLOF C15			;15
	COLOF C16			;16
	COLOF C17			;17
	COLOF C18			;18
	COLOF C19			;19
	COLOF C20
	COLOF C21
	COLOF COL22
	COLOF COL23
	COLOF COL24
	COLOF COL25
	COLOF COL26
	.PAGE
	.SBTTL SCROLLFIELD COLUMNS CONTENTS
COLHED:
COL1:	.BYTE 11.,SRSID1,1,STGOAL,3,SGOAL
COL2:	.BYTE 1,SCORK,2,SBLNK,1,SBOT1,4,SBLNK
	.BYTE 1,SBOT1,6,SBLNK
COL34:	.BYTE 1,STOP1,2,SBLNK,1,SBOT1,4,SBLNK
	.BYTE 1,SBOT1,6,SBLNK
COL5:	.BYTE 1,STOP1,2,SBLNK,1,SBOT1,4,SBLNK
	.BYTE 1,SLLCD,6,SLSID1
COL6T9:	.BYTE 1,STOP1,2,SBLNK,1,SBOT1,11.,SBLNK
COL7:	.BYTE 1,STOP1,2,SBLNK,1,SBOT1,10.,SBLNK
	.BYTE 1,SLRBAR
COL10:	.BYTE 1,STOP1,2,SBLNK,1,SBOT1,11.,SRSID1
COL11:	.BYTE 1,STOP1,4,SSQBLA,6.,SBLNK,1,SURC2,1,SURCD,2,SBLNK
COL12:	.BYTE 1,STOP1,4,SSQBLA,7.,SBLNK,1,SURC3,1,SURC4,1,SURC5
C1314:	.BYTE 1,STOP1,4,SSQBLA,10.,SBLNK
C15:	.BYTE 1,STOP1,1,SWTBLA,3,SSQBLA,1,NETBLA,9,SBLNK
C16:	.BYTE 1,STOP1,1,SBLNK,1,SWTBLA,3,SSQBLA,1,NETBLA,8,SBLNK
C17:	.BYTE 1,STOP1,2,SBLNK,1,SWTBLA,3,SSQBLA,1,NETBLA,1,SSQBLA,6,SBLNK
C18:	.BYTE 1,STOP1,3,SBLNK,1,SWTBLA,4,SSQBLA,6,SBLNK
C19:	.BYTE 1,STOP1,4,SBLNK,1,SWTBLA,3,SSQBLA,6,SBLNK
C20:	.BYTE 1,STOP1,4,SBLNK,4,SSQBLA,6,SBLNK
C21:	.BYTE 1,STOP1,14.,SBLNK
COL22:	.BYTE 1,STOP1,11.,SBLNK,1,SULC3,1,SULC2,1,SULC1
COL23:	.BYTE 1,STOP1,10.,SBLNK,1,SULC4,1,SULCD,2,SBLNK
COL24:	.BYTE 1,STOP1,9.,SBLNK,1,SULC5,1,SULCD,3,SBLNK
COL25:	.BYTE 1,STOP1,9.,SBLNK,1,SULC6,4,SBLNK
COL26:	.BYTE 1,SURCOR,9.,SRSID1,1,SULC7,4,SRSID1
	.END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            